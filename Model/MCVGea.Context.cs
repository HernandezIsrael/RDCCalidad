//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClusmextContext : DbContext
    {
        public ClusmextContext()
            : base("name=ClusmextContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CA_Areas> CA_Areas { get; set; }
        public virtual DbSet<Ca_Tipo_Usuario> Ca_Tipo_Usuario { get; set; }
        public virtual DbSet<Grupos_Menu> Grupos_Menu { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Ca_Categoria> Ca_Categoria { get; set; }
        public virtual DbSet<Ca_Condicion> Ca_Condicion { get; set; }
        public virtual DbSet<Ca_CS> Ca_CS { get; set; }
        public virtual DbSet<Ca_Estado> Ca_Estado { get; set; }
        public virtual DbSet<Ca_Pais> Ca_Pais { get; set; }
        public virtual DbSet<Ca_Bancos> Ca_Bancos { get; set; }
        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<TaksAdmon> TaksAdmon { get; set; }
        public virtual DbSet<TaksComentarios> TaksComentarios { get; set; }
        public virtual DbSet<TaksDocumentos> TaksDocumentos { get; set; }
        public virtual DbSet<TaksDocumentosComentarios> TaksDocumentosComentarios { get; set; }
        public virtual DbSet<TaksEstatus> TaksEstatus { get; set; }
        public virtual DbSet<TaksPertenencia> TaksPertenencia { get; set; }
        public virtual DbSet<TaksTipo> TaksTipo { get; set; }
        public virtual DbSet<TaksTipoDocumento> TaksTipoDocumento { get; set; }
        public virtual DbSet<TaksAtencion> TaksAtencion { get; set; }
        public virtual DbSet<Ca_Instituciones> Ca_Instituciones { get; set; }
        public virtual DbSet<Ca_Marca> Ca_Marca { get; set; }
        public virtual DbSet<Ca_Medio_Entrega> Ca_Medio_Entrega { get; set; }
        public virtual DbSet<Ca_Moneda> Ca_Moneda { get; set; }
        public virtual DbSet<Ca_Rubros> Ca_Rubros { get; set; }
        public virtual DbSet<Ca_Solicitado_por> Ca_Solicitado_por { get; set; }
        public virtual DbSet<Ca_Tipo_Codole> Ca_Tipo_Codole { get; set; }
        public virtual DbSet<Ca_Tipo_Contrato> Ca_Tipo_Contrato { get; set; }
        public virtual DbSet<Ca_Tipo_Pago> Ca_Tipo_Pago { get; set; }
        public virtual DbSet<Ca_Tipo_Servicio> Ca_Tipo_Servicio { get; set; }
        public virtual DbSet<CaTipoRConta> CaTipoRConta { get; set; }
        public virtual DbSet<CaTipoREjecucion> CaTipoREjecucion { get; set; }
        public virtual DbSet<CaTipoRPlancio> CaTipoRPlancio { get; set; }
        public virtual DbSet<CaTipoRProcesos> CaTipoRProcesos { get; set; }
        public virtual DbSet<CaTipoRRHHD> CaTipoRRHHD { get; set; }
        public virtual DbSet<CaTipoRVinculaciones> CaTipoRVinculaciones { get; set; }
        public virtual DbSet<CaTipoTesoreria> CaTipoTesoreria { get; set; }
        public virtual DbSet<Ca_N_Cuenta> Ca_N_Cuenta { get; set; }
        public virtual DbSet<Proyectos> Proyectos { get; set; }
        public virtual DbSet<Ca_Clabe> Ca_Clabe { get; set; }
        public virtual DbSet<Re_Bancos_Empresa> Re_Bancos_Empresa { get; set; }
        public virtual DbSet<Re_Usuario_Empresa> Re_Usuario_Empresa { get; set; }
        public virtual DbSet<Re_Proveedores_Empresa> Re_Proveedores_Empresa { get; set; }
        public virtual DbSet<V_Pagos> V_Pagos { get; set; }
        public virtual DbSet<Notifications> Notifications { get; set; }
        public virtual DbSet<NotificationsStatus> NotificationsStatus { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Actividades_Areas> Actividades_Areas { get; set; }
        public virtual DbSet<Activo_Fijo> Activo_Fijo { get; set; }
        public virtual DbSet<AF_Comentarios> AF_Comentarios { get; set; }
        public virtual DbSet<Amex> Amex { get; set; }
        public virtual DbSet<Anticipos> Anticipos { get; set; }
        public virtual DbSet<AuditoriaDocs> AuditoriaDocs { get; set; }
        public virtual DbSet<Autorizaciones_Pago> Autorizaciones_Pago { get; set; }
        public virtual DbSet<Avances_Actividades> Avances_Actividades { get; set; }
        public virtual DbSet<Ca_Archivero> Ca_Archivero { get; set; }
        public virtual DbSet<Ca_Bloque> Ca_Bloque { get; set; }
        public virtual DbSet<Ca_Calidad_Servicio> Ca_Calidad_Servicio { get; set; }
        public virtual DbSet<Ca_Clasificacion> Ca_Clasificacion { get; set; }
        public virtual DbSet<Ca_Contratos> Ca_Contratos { get; set; }
        public virtual DbSet<Ca_Estatus_Cobro> Ca_Estatus_Cobro { get; set; }
        public virtual DbSet<Ca_Estatus_Oficina> Ca_Estatus_Oficina { get; set; }
        public virtual DbSet<Ca_Estatus_Pago> Ca_Estatus_Pago { get; set; }
        public virtual DbSet<Ca_Estatus_Servicios> Ca_Estatus_Servicios { get; set; }
        public virtual DbSet<Ca_FTP> Ca_FTP { get; set; }
        public virtual DbSet<Ca_Iva> Ca_Iva { get; set; }
        public virtual DbSet<Ca_Lapso> Ca_Lapso { get; set; }
        public virtual DbSet<Ca_Modalidad> Ca_Modalidad { get; set; }
        public virtual DbSet<Ca_Monto_Pagos_Contrato> Ca_Monto_Pagos_Contrato { get; set; }
        public virtual DbSet<Ca_Nivel> Ca_Nivel { get; set; }
        public virtual DbSet<Ca_Nivel1> Ca_Nivel1 { get; set; }
        public virtual DbSet<Ca_Nivel2> Ca_Nivel2 { get; set; }
        public virtual DbSet<Ca_Nivel3> Ca_Nivel3 { get; set; }
        public virtual DbSet<Ca_Oficinas> Ca_Oficinas { get; set; }
        public virtual DbSet<Ca_Progamas> Ca_Progamas { get; set; }
        public virtual DbSet<Ca_Referencia> Ca_Referencia { get; set; }
        public virtual DbSet<Ca_Status_Requisicion> Ca_Status_Requisicion { get; set; }
        public virtual DbSet<Ca_Status_Ticket> Ca_Status_Ticket { get; set; }
        public virtual DbSet<Ca_Tipo_Cambio> Ca_Tipo_Cambio { get; set; }
        public virtual DbSet<Ca_Tipo_Documento> Ca_Tipo_Documento { get; set; }
        public virtual DbSet<Ca_Tipo_Documento_Codole> Ca_Tipo_Documento_Codole { get; set; }
        public virtual DbSet<Ca_Tipo_Documento_Pago> Ca_Tipo_Documento_Pago { get; set; }
        public virtual DbSet<Ca_Tipo_Empresa> Ca_Tipo_Empresa { get; set; }
        public virtual DbSet<Ca_Tipo_FTP> Ca_Tipo_FTP { get; set; }
        public virtual DbSet<Ca_Tipo_Movimiento> Ca_Tipo_Movimiento { get; set; }
        public virtual DbSet<Ca_Tipo_Oficina> Ca_Tipo_Oficina { get; set; }
        public virtual DbSet<Ca_Tipo_Parte> Ca_Tipo_Parte { get; set; }
        public virtual DbSet<Capacidades_Servicios> Capacidades_Servicios { get; set; }
        public virtual DbSet<CaSistemasSh> CaSistemasSh { get; set; }
        public virtual DbSet<CaUrlSharepoint> CaUrlSharepoint { get; set; }
        public virtual DbSet<Co_Entrada_Salidas> Co_Entrada_Salidas { get; set; }
        public virtual DbSet<Cobro_Planeacion> Cobro_Planeacion { get; set; }
        public virtual DbSet<CobroxServiciosxEmpresa> CobroxServiciosxEmpresa { get; set; }
        public virtual DbSet<CODOLE> CODOLE { get; set; }
        public virtual DbSet<Codole_Documentos> Codole_Documentos { get; set; }
        public virtual DbSet<Comparativo_Proveedor> Comparativo_Proveedor { get; set; }
        public virtual DbSet<Conceptos> Conceptos { get; set; }
        public virtual DbSet<Contratos> Contratos { get; set; }
        public virtual DbSet<Correos_Servicios> Correos_Servicios { get; set; }
        public virtual DbSet<Costos_Planeacion> Costos_Planeacion { get; set; }
        public virtual DbSet<Csv> Csv { get; set; }
        public virtual DbSet<CsvAmex> CsvAmex { get; set; }
        public virtual DbSet<CsvPCuentas> CsvPCuentas { get; set; }
        public virtual DbSet<CsvPosicion> CsvPosicion { get; set; }
        public virtual DbSet<Documentos> Documentos { get; set; }
        public virtual DbSet<Documentos_Codole> Documentos_Codole { get; set; }
        public virtual DbSet<DocumentosRConta> DocumentosRConta { get; set; }
        public virtual DbSet<DocumentosREjecucion> DocumentosREjecucion { get; set; }
        public virtual DbSet<DocumentosRPlancio> DocumentosRPlancio { get; set; }
        public virtual DbSet<DocumentosRProcesos> DocumentosRProcesos { get; set; }
        public virtual DbSet<DocumentosRRHHD> DocumentosRRHHD { get; set; }
        public virtual DbSet<DocumentosRTesoreria> DocumentosRTesoreria { get; set; }
        public virtual DbSet<DocumentosRVinculaciones> DocumentosRVinculaciones { get; set; }
        public virtual DbSet<Entregables_Pago> Entregables_Pago { get; set; }
        public virtual DbSet<Entregables_Proyectos> Entregables_Proyectos { get; set; }
        public virtual DbSet<Log_Correos_Contratos> Log_Correos_Contratos { get; set; }
        public virtual DbSet<Log_Correos_Entregables> Log_Correos_Entregables { get; set; }
        public virtual DbSet<Log_Documentos> Log_Documentos { get; set; }
        public virtual DbSet<Log_Pagos> Log_Pagos { get; set; }
        public virtual DbSet<Log_Re_Documento_Pago> Log_Re_Documento_Pago { get; set; }
        public virtual DbSet<LogEventosSh> LogEventosSh { get; set; }
        public virtual DbSet<LogSharepoint> LogSharepoint { get; set; }
        public virtual DbSet<LogSyncSharepoint> LogSyncSharepoint { get; set; }
        public virtual DbSet<LogTrvAcompaniante> LogTrvAcompaniante { get; set; }
        public virtual DbSet<LogTrvDoctos> LogTrvDoctos { get; set; }
        public virtual DbSet<Meses_Proyecto> Meses_Proyecto { get; set; }
        public virtual DbSet<Monto_Pagos_Contrato> Monto_Pagos_Contrato { get; set; }
        public virtual DbSet<MovimientosBancosCsv> MovimientosBancosCsv { get; set; }
        public virtual DbSet<Orden_Compra> Orden_Compra { get; set; }
        public virtual DbSet<Pagos> Pagos { get; set; }
        public virtual DbSet<PAmex> PAmex { get; set; }
        public virtual DbSet<Partes> Partes { get; set; }
        public virtual DbSet<Patrones_Bancos> Patrones_Bancos { get; set; }
        public virtual DbSet<Presupuesto_Proyectos> Presupuesto_Proyectos { get; set; }
        public virtual DbSet<Pruebas_Pagos> Pruebas_Pagos { get; set; }
        public virtual DbSet<Re_Codole_Empresas> Re_Codole_Empresas { get; set; }
        public virtual DbSet<Re_Contratos_Empresas> Re_Contratos_Empresas { get; set; }
        public virtual DbSet<Re_Documento_AF> Re_Documento_AF { get; set; }
        public virtual DbSet<Re_Documento_Contrato> Re_Documento_Contrato { get; set; }
        public virtual DbSet<Re_Documento_Pago> Re_Documento_Pago { get; set; }
        public virtual DbSet<Re_Permisos_Pago> Re_Permisos_Pago { get; set; }
        public virtual DbSet<Re_Rubros_Pago> Re_Rubros_Pago { get; set; }
        public virtual DbSet<Re_Servicios_CUCC> Re_Servicios_CUCC { get; set; }
        public virtual DbSet<Re_Servicios_NURC> Re_Servicios_NURC { get; set; }
        public virtual DbSet<Re_Tipo_Contrato_Tipo_Parte> Re_Tipo_Contrato_Tipo_Parte { get; set; }
        public virtual DbSet<Reporte_Factura> Reporte_Factura { get; set; }
        public virtual DbSet<Requisicion_Compra> Requisicion_Compra { get; set; }
        public virtual DbSet<Requisicion_Compra_Detalle> Requisicion_Compra_Detalle { get; set; }
        public virtual DbSet<Requisicion_Compra_Proveedor> Requisicion_Compra_Proveedor { get; set; }
        public virtual DbSet<Responsable_Proyecto> Responsable_Proyecto { get; set; }
        public virtual DbSet<RProcesos> RProcesos { get; set; }
        public virtual DbSet<RTesoreria> RTesoreria { get; set; }
        public virtual DbSet<Rubros_Proyectos> Rubros_Proyectos { get; set; }
        public virtual DbSet<SEDirecciones> SEDirecciones { get; set; }
        public virtual DbSet<SEDocumentosServicios> SEDocumentosServicios { get; set; }
        public virtual DbSet<SEEstatusServicios> SEEstatusServicios { get; set; }
        public virtual DbSet<SELogServicios> SELogServicios { get; set; }
        public virtual DbSet<Servicios> Servicios { get; set; }
        public virtual DbSet<SETipoDocumento> SETipoDocumento { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TaskNotifiComentario> TaskNotifiComentario { get; set; }
        public virtual DbSet<TipoTransaccion> TipoTransaccion { get; set; }
        public virtual DbSet<TrvAcompaniante> TrvAcompaniante { get; set; }
        public virtual DbSet<TrvConceptos> TrvConceptos { get; set; }
        public virtual DbSet<TrvDoctos> TrvDoctos { get; set; }
        public virtual DbSet<TrvEstatus> TrvEstatus { get; set; }
        public virtual DbSet<TrvRepConceptos> TrvRepConceptos { get; set; }
        public virtual DbSet<TrvReq> TrvReq { get; set; }
        public virtual DbSet<TrvTransporte> TrvTransporte { get; set; }
        public virtual DbSet<TrvTurno> TrvTurno { get; set; }
        public virtual DbSet<asistencias> asistencias { get; set; }
        public virtual DbSet<Ca_Disponible> Ca_Disponible { get; set; }
        public virtual DbSet<Ca_Estatus_Actividades> Ca_Estatus_Actividades { get; set; }
        public virtual DbSet<Ca_Tiempo> Ca_Tiempo { get; set; }
        public virtual DbSet<Ca_Unidad_Medida> Ca_Unidad_Medida { get; set; }
        public virtual DbSet<CaCFDI> CaCFDI { get; set; }
        public virtual DbSet<caFormaPago> caFormaPago { get; set; }
        public virtual DbSet<CaMetodoPago> CaMetodoPago { get; set; }
        public virtual DbSet<CaReqFacturas> CaReqFacturas { get; set; }
        public virtual DbSet<CargaTempPagos> CargaTempPagos { get; set; }
        public virtual DbSet<caStatusFactura> caStatusFactura { get; set; }
        public virtual DbSet<CaStatusRequisicion> CaStatusRequisicion { get; set; }
        public virtual DbSet<CaTablasDocumentos> CaTablasDocumentos { get; set; }
        public virtual DbSet<Comparacion_Proveedor_Temp> Comparacion_Proveedor_Temp { get; set; }
        public virtual DbSet<ComparativaProveedores> ComparativaProveedores { get; set; }
        public virtual DbSet<CompraTipoDocumento> CompraTipoDocumento { get; set; }
        public virtual DbSet<correoReqCompra> correoReqCompra { get; set; }
        public virtual DbSet<DocumentoActividades> DocumentoActividades { get; set; }
        public virtual DbSet<EmpresasV2> EmpresasV2 { get; set; }
        public virtual DbSet<EnviadorCorreos> EnviadorCorreos { get; set; }
        public virtual DbSet<Log_Capacidades_Servicios> Log_Capacidades_Servicios { get; set; }
        public virtual DbSet<Log_CODOLE> Log_CODOLE { get; set; }
        public virtual DbSet<Log_Correos_Codole> Log_Correos_Codole { get; set; }
        public virtual DbSet<LogRConta> LogRConta { get; set; }
        public virtual DbSet<LogREjecucion> LogREjecucion { get; set; }
        public virtual DbSet<LogRRHHD> LogRRHHD { get; set; }
        public virtual DbSet<LogRTesoreria> LogRTesoreria { get; set; }
        public virtual DbSet<LogRVinculaciones> LogRVinculaciones { get; set; }
        public virtual DbSet<NomenclaturaCalidad> NomenclaturaCalidad { get; set; }
        public virtual DbSet<OrCompraDetalle> OrCompraDetalle { get; set; }
        public virtual DbSet<Orden_Compra_Autorizacion> Orden_Compra_Autorizacion { get; set; }
        public virtual DbSet<Orden_Compra_Detalle> Orden_Compra_Detalle { get; set; }
        public virtual DbSet<OrdenCompra> OrdenCompra { get; set; }
        public virtual DbSet<RConta> RConta { get; set; }
        public virtual DbSet<RDC> RDC { get; set; }
        public virtual DbSet<Re_Empresa_Logo> Re_Empresa_Logo { get; set; }
        public virtual DbSet<Re_Requisicion_Preguntas_Proveedor> Re_Requisicion_Preguntas_Proveedor { get; set; }
        public virtual DbSet<RegistroActividades> RegistroActividades { get; set; }
        public virtual DbSet<REjecucion> REjecucion { get; set; }
        public virtual DbSet<Relacion_Usuario_Empresa> Relacion_Usuario_Empresa { get; set; }
        public virtual DbSet<ReqCompra> ReqCompra { get; set; }
        public virtual DbSet<ReqCompraDetalle> ReqCompraDetalle { get; set; }
        public virtual DbSet<ReqDocumentosCompra> ReqDocumentosCompra { get; set; }
        public virtual DbSet<ReqFacturaAutorizacion> ReqFacturaAutorizacion { get; set; }
        public virtual DbSet<ReqFacturaDocumentos> ReqFacturaDocumentos { get; set; }
        public virtual DbSet<ReqFacturas> ReqFacturas { get; set; }
        public virtual DbSet<reqFacturasDetalle> reqFacturasDetalle { get; set; }
        public virtual DbSet<ReqStatusFactura> ReqStatusFactura { get; set; }
        public virtual DbSet<Requisicion_Autorizacion> Requisicion_Autorizacion { get; set; }
        public virtual DbSet<Requisicion_Evaluacion_Proveedor> Requisicion_Evaluacion_Proveedor { get; set; }
        public virtual DbSet<Requisicion_Preguntas_Proveedor> Requisicion_Preguntas_Proveedor { get; set; }
        public virtual DbSet<RH_Documentos> RH_Documentos { get; set; }
        public virtual DbSet<RH_Expediente> RH_Expediente { get; set; }
        public virtual DbSet<RH_ExpedienteLog> RH_ExpedienteLog { get; set; }
        public virtual DbSet<RHCaDiasAnos> RHCaDiasAnos { get; set; }
        public virtual DbSet<RhCaEventos> RhCaEventos { get; set; }
        public virtual DbSet<RhCalendario> RhCalendario { get; set; }
        public virtual DbSet<RhCalendarioLog> RhCalendarioLog { get; set; }
        public virtual DbSet<RhCaParentesco> RhCaParentesco { get; set; }
        public virtual DbSet<RhCaTipoCorreo> RhCaTipoCorreo { get; set; }
        public virtual DbSet<RhConfiguraExcel> RhConfiguraExcel { get; set; }
        public virtual DbSet<RhDocumentosImpuesto> RhDocumentosImpuesto { get; set; }
        public virtual DbSet<RHExpedienteEmpleado> RHExpedienteEmpleado { get; set; }
        public virtual DbSet<RHExpedienteEmpleadoLog> RHExpedienteEmpleadoLog { get; set; }
        public virtual DbSet<RhImpuestoNomina> RhImpuestoNomina { get; set; }
        public virtual DbSet<RhLogConfiguracionCorreos> RhLogConfiguracionCorreos { get; set; }
        public virtual DbSet<RhLogConfiguraExcel> RhLogConfiguraExcel { get; set; }
        public virtual DbSet<RHLogDocumentos> RHLogDocumentos { get; set; }
        public virtual DbSet<RhLogDocumentosImpuesto> RhLogDocumentosImpuesto { get; set; }
        public virtual DbSet<RhLogNomina> RhLogNomina { get; set; }
        public virtual DbSet<RhLogNominaAdicional> RhLogNominaAdicional { get; set; }
        public virtual DbSet<RhLogTotalNomina> RhLogTotalNomina { get; set; }
        public virtual DbSet<RhLogVacaciones> RhLogVacaciones { get; set; }
        public virtual DbSet<RhLogVacacionesAutorizacion> RhLogVacacionesAutorizacion { get; set; }
        public virtual DbSet<RhLogVacantes> RhLogVacantes { get; set; }
        public virtual DbSet<RhNomina> RhNomina { get; set; }
        public virtual DbSet<RhNominaAdicional> RhNominaAdicional { get; set; }
        public virtual DbSet<RhTipoDocumento> RhTipoDocumento { get; set; }
        public virtual DbSet<RhTotalNomina> RhTotalNomina { get; set; }
        public virtual DbSet<RhVacaciones> RhVacaciones { get; set; }
        public virtual DbSet<RhVacacionesAutorizacion> RhVacacionesAutorizacion { get; set; }
        public virtual DbSet<RhVacantes> RhVacantes { get; set; }
        public virtual DbSet<RPlancio> RPlancio { get; set; }
        public virtual DbSet<RRHHD> RRHHD { get; set; }
        public virtual DbSet<RVinculaciones> RVinculaciones { get; set; }
        public virtual DbSet<Temp_Actividades_Reporte> Temp_Actividades_Reporte { get; set; }
        public virtual DbSet<temp_cs> temp_cs { get; set; }
        public virtual DbSet<Ticket_Ti> Ticket_Ti { get; set; }
        public virtual DbSet<TipoDocCompra> TipoDocCompra { get; set; }
        public virtual DbSet<Manuales> Manuales { get; set; }
        public virtual DbSet<ManualesTipoUsuarios> ManualesTipoUsuarios { get; set; }
        public virtual DbSet<InvInventario> InvInventario { get; set; }
        public virtual DbSet<InvListaPedidos> InvListaPedidos { get; set; }
        public virtual DbSet<InvPedidos> InvPedidos { get; set; }
        public virtual DbSet<InvSolicitud> InvSolicitud { get; set; }
        public virtual DbSet<InvSubTipo> InvSubTipo { get; set; }
        public virtual DbSet<InvTipo> InvTipo { get; set; }
        public virtual DbSet<InvUMedida> InvUMedida { get; set; }
        public virtual DbSet<InvEstatus> InvEstatus { get; set; }
        public virtual DbSet<V_Proyectos> V_Proyectos { get; set; }
        public virtual DbSet<V_Rubros_Proyecto> V_Rubros_Proyecto { get; set; }
        public virtual DbSet<NewsFeed> NewsFeed { get; set; }
        public virtual DbSet<TipoNoticia> TipoNoticia { get; set; }
    
        public virtual ObjectResult<spSelVUltimosSaldos_Result> spSelVUltimosSaldos(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelVUltimosSaldos_Result>("spSelVUltimosSaldos", idUsuarioParameter);
        }
    
        public virtual ObjectResult<spSelPagos_Procesados_Usuario_Result> spSelPagos_Procesados_Usuario(Nullable<int> creado_por)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Procesados_Usuario_Result>("spSelPagos_Procesados_Usuario", creado_porParameter);
        }
    
        public virtual ObjectResult<spSelPagos_Captura_Usuario_Result> spSelPagos_Captura_Usuario(Nullable<int> creado_por)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Captura_Usuario_Result>("spSelPagos_Captura_Usuario", creado_porParameter);
        }
    
        public virtual int spInsDocumentoServiciosInit(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idDocumentoServicio, Nullable<int> idServicio, Nullable<int> id_Tipo_Documento, ObjectParameter nombre_Virtual, ObjectParameter id_Documento, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idDocumentoServicioParameter = idDocumentoServicio.HasValue ?
                new ObjectParameter("IdDocumentoServicio", idDocumentoServicio) :
                new ObjectParameter("IdDocumentoServicio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var id_Tipo_DocumentoParameter = id_Tipo_Documento.HasValue ?
                new ObjectParameter("Id_Tipo_Documento", id_Tipo_Documento) :
                new ObjectParameter("Id_Tipo_Documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentoServiciosInit", nombreParameter, id_FtpParameter, creado_porParameter, idDocumentoServicioParameter, idServicioParameter, id_Tipo_DocumentoParameter, nombre_Virtual, id_Documento, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spInsDoctosTask(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idTaks, Nullable<int> idTaksTipoDocumento, ObjectParameter nombre_Virtual, ObjectParameter id_Documento, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idTaksParameter = idTaks.HasValue ?
                new ObjectParameter("IdTaks", idTaks) :
                new ObjectParameter("IdTaks", typeof(int));
    
            var idTaksTipoDocumentoParameter = idTaksTipoDocumento.HasValue ?
                new ObjectParameter("IdTaksTipoDocumento", idTaksTipoDocumento) :
                new ObjectParameter("IdTaksTipoDocumento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDoctosTask", nombreParameter, id_FtpParameter, creado_porParameter, idTaksParameter, idTaksTipoDocumentoParameter, nombre_Virtual, id_Documento, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelPagos_Programados_Result> spSelPagos_Programados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Programados_Result>("spSelPagos_Programados");
        }
    
        public virtual int spPupEstatusPagoCambio(Nullable<int> id_Pago, Nullable<System.DateTime> f_Pago, string n_Transferencia, Nullable<int> id_Usuario, Nullable<decimal> cambio, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var f_PagoParameter = f_Pago.HasValue ?
                new ObjectParameter("F_Pago", f_Pago) :
                new ObjectParameter("F_Pago", typeof(System.DateTime));
    
            var n_TransferenciaParameter = n_Transferencia != null ?
                new ObjectParameter("N_Transferencia", n_Transferencia) :
                new ObjectParameter("N_Transferencia", typeof(string));
    
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            var cambioParameter = cambio.HasValue ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupEstatusPagoCambio", id_PagoParameter, f_PagoParameter, n_TransferenciaParameter, id_UsuarioParameter, cambioParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelPagos_Autorizacion_DG_Result> spSelPagos_Autorizacion_DG(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Autorizacion_DG_Result>("spSelPagos_Autorizacion_DG", id_UsuarioParameter);
        }
    
        public virtual ObjectResult<spSelDocumentos_Pago_Id_Result> spSelDocumentos_Pago_Id(Nullable<int> id_Pago)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentos_Pago_Id_Result>("spSelDocumentos_Pago_Id", id_PagoParameter);
        }
    
        public virtual ObjectResult<spSel_Conceptos_Pago_Result> spSel_Conceptos_Pago(Nullable<int> id_Pago)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_Conceptos_Pago_Result>("spSel_Conceptos_Pago", id_PagoParameter);
        }
    
        public virtual ObjectResult<spSelBancos_Empresa_V2_Result> spSelBancos_Empresa_V2(Nullable<int> id_Empresa, Nullable<int> id_Moneda)
        {
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_MonedaParameter = id_Moneda.HasValue ?
                new ObjectParameter("Id_Moneda", id_Moneda) :
                new ObjectParameter("Id_Moneda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelBancos_Empresa_V2_Result>("spSelBancos_Empresa_V2", id_EmpresaParameter, id_MonedaParameter);
        }
    
        public virtual ObjectResult<spSelNCuenta_Banco_Empresa_V2_Result> spSelNCuenta_Banco_Empresa_V2(Nullable<int> id_Banco, Nullable<int> id_Empresa, Nullable<int> id_Moneda)
        {
            var id_BancoParameter = id_Banco.HasValue ?
                new ObjectParameter("Id_Banco", id_Banco) :
                new ObjectParameter("Id_Banco", typeof(int));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_MonedaParameter = id_Moneda.HasValue ?
                new ObjectParameter("Id_Moneda", id_Moneda) :
                new ObjectParameter("Id_Moneda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelNCuenta_Banco_Empresa_V2_Result>("spSelNCuenta_Banco_Empresa_V2", id_BancoParameter, id_EmpresaParameter, id_MonedaParameter);
        }
    
        public virtual ObjectResult<spSelClabe_Banco_Empresa_V2_Result> spSelClabe_Banco_Empresa_V2(Nullable<int> id_Banco, Nullable<int> id_Empresa, Nullable<int> id_Moneda)
        {
            var id_BancoParameter = id_Banco.HasValue ?
                new ObjectParameter("Id_Banco", id_Banco) :
                new ObjectParameter("Id_Banco", typeof(int));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_MonedaParameter = id_Moneda.HasValue ?
                new ObjectParameter("Id_Moneda", id_Moneda) :
                new ObjectParameter("Id_Moneda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelClabe_Banco_Empresa_V2_Result>("spSelClabe_Banco_Empresa_V2", id_BancoParameter, id_EmpresaParameter, id_MonedaParameter);
        }
    
        public virtual int spPupNurcCs(Nullable<int> id_Pago, Nullable<int> id_CS1, Nullable<int> id_CS2, Nullable<int> id_CS3, Nullable<int> id_CS4, Nullable<int> id_CS5, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_CS1Parameter = id_CS1.HasValue ?
                new ObjectParameter("Id_CS1", id_CS1) :
                new ObjectParameter("Id_CS1", typeof(int));
    
            var id_CS2Parameter = id_CS2.HasValue ?
                new ObjectParameter("Id_CS2", id_CS2) :
                new ObjectParameter("Id_CS2", typeof(int));
    
            var id_CS3Parameter = id_CS3.HasValue ?
                new ObjectParameter("Id_CS3", id_CS3) :
                new ObjectParameter("Id_CS3", typeof(int));
    
            var id_CS4Parameter = id_CS4.HasValue ?
                new ObjectParameter("Id_CS4", id_CS4) :
                new ObjectParameter("Id_CS4", typeof(int));
    
            var id_CS5Parameter = id_CS5.HasValue ?
                new ObjectParameter("Id_CS5", id_CS5) :
                new ObjectParameter("Id_CS5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupNurcCs", id_PagoParameter, id_CS1Parameter, id_CS2Parameter, id_CS3Parameter, id_CS4Parameter, id_CS5Parameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPupAutoDGeneral(Nullable<int> id_Pago, Nullable<int> creado_por, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupAutoDGeneral", id_PagoParameter, creado_porParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPupAutorizaciones_Pago(Nullable<int> id_Pago, Nullable<int> id_Estatus_Pago, string comentarios, Nullable<int> creado_por, Nullable<bool> autorizacion, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_Estatus_PagoParameter = id_Estatus_Pago.HasValue ?
                new ObjectParameter("Id_Estatus_Pago", id_Estatus_Pago) :
                new ObjectParameter("Id_Estatus_Pago", typeof(int));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var autorizacionParameter = autorizacion.HasValue ?
                new ObjectParameter("Autorizacion", autorizacion) :
                new ObjectParameter("Autorizacion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupAutorizaciones_Pago", id_PagoParameter, id_Estatus_PagoParameter, comentariosParameter, creado_porParameter, autorizacionParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelPagos_Id_Result> spSelPagos_Id(Nullable<int> id_Pago)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Id_Result>("spSelPagos_Id", id_PagoParameter);
        }
    
        public virtual ObjectResult<spSelProyectos_Empresas_Result> spSelProyectos_Empresas(Nullable<int> id_Empresa)
        {
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelProyectos_Empresas_Result>("spSelProyectos_Empresas", id_EmpresaParameter);
        }
    
        public virtual ObjectResult<spSelRubros_Proyecto_Result> spSelRubros_Proyecto(Nullable<int> id_Proyecto)
        {
            var id_ProyectoParameter = id_Proyecto.HasValue ?
                new ObjectParameter("Id_Proyecto", id_Proyecto) :
                new ObjectParameter("Id_Proyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRubros_Proyecto_Result>("spSelRubros_Proyecto", id_ProyectoParameter);
        }
    
        public virtual ObjectResult<spSel_Solicitado_por_Result> spSel_Solicitado_por()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_Solicitado_por_Result>("spSel_Solicitado_por");
        }
    
        public virtual ObjectResult<spSelProveedores_Empresa_Result> spSelProveedores_Empresa(Nullable<int> id_Empresa)
        {
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelProveedores_Empresa_Result>("spSelProveedores_Empresa", id_EmpresaParameter);
        }
    
        public virtual ObjectResult<spSelTipo_Pago_Activo_Result> spSelTipo_Pago_Activo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelTipo_Pago_Activo_Result>("spSelTipo_Pago_Activo");
        }
    
        public virtual ObjectResult<spSelMoneda_Result> spSelMoneda()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMoneda_Result>("spSelMoneda");
        }
    
        public virtual ObjectResult<spSelMonedas_Result> spSelMonedas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMonedas_Result>("spSelMonedas");
        }
    
        public virtual ObjectResult<spSelContratos_Result> spSelContratos(Nullable<int> id_Empresa, Nullable<int> id_Contrato)
        {
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_ContratoParameter = id_Contrato.HasValue ?
                new ObjectParameter("Id_Contrato", id_Contrato) :
                new ObjectParameter("Id_Contrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelContratos_Result>("spSelContratos", id_EmpresaParameter, id_ContratoParameter);
        }
    
        public virtual ObjectResult<spSelTipo_Documento_Result> spSelTipo_Documento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelTipo_Documento_Result>("spSelTipo_Documento");
        }
    
        public virtual int spInsDocumento_Pago(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> id_Pago, Nullable<int> id_Tipo_Documento, ObjectParameter nombre_Virtual, ObjectParameter id_Documento, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_Tipo_DocumentoParameter = id_Tipo_Documento.HasValue ?
                new ObjectParameter("Id_Tipo_Documento", id_Tipo_Documento) :
                new ObjectParameter("Id_Tipo_Documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumento_Pago", nombreParameter, id_FtpParameter, creado_porParameter, id_PagoParameter, id_Tipo_DocumentoParameter, nombre_Virtual, id_Documento, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPupDesHabilitar_Documentos(Nullable<int> id_Documento, Nullable<int> creado_por, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_DocumentoParameter = id_Documento.HasValue ?
                new ObjectParameter("Id_Documento", id_Documento) :
                new ObjectParameter("Id_Documento", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupDesHabilitar_Documentos", id_DocumentoParameter, creado_porParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spInsPago(Nullable<int> creado_por, ObjectParameter id_Pago, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsPago", creado_porParameter, id_Pago, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spDelConceptos(Nullable<int> id_Conceptos, Nullable<int> creado_por, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_ConceptosParameter = id_Conceptos.HasValue ?
                new ObjectParameter("Id_Conceptos", id_Conceptos) :
                new ObjectParameter("Id_Conceptos", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelConceptos", id_ConceptosParameter, creado_porParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spDelConceptos_Pago(Nullable<int> id_Pago, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelConceptos_Pago", id_PagoParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPupPagos(Nullable<int> id_Pago, Nullable<int> id_Estatus_Pago, Nullable<int> id_Empresa, Nullable<int> id_Proveedor, Nullable<int> id_Banco, Nullable<int> id_Clabe, Nullable<decimal> importe_Total, Nullable<System.DateTime> f_Compromiso_Pago, Nullable<bool> proyecto, Nullable<int> id_Proyecto, Nullable<bool> contrato, Nullable<int> id_Contrato, Nullable<bool> anticipo, Nullable<int> id_Moneda, Nullable<int> id_Rubro, Nullable<int> id_Iva, Nullable<decimal> retenciones, Nullable<decimal> iSR, string folio_Fiscal, Nullable<int> id_N_Cuenta, Nullable<System.DateTime> fecha_Anticipo_Factura, Nullable<decimal> otros, Nullable<System.DateTime> f_Emision_Factura, Nullable<int> creado_por, string comentario, Nullable<int> id_Tipo_Pago, string n_Cotizacion, string solicitado_por, Nullable<int> id_Clasificacion, Nullable<decimal> iVA, Nullable<int> id_Solicitado_por, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_Estatus_PagoParameter = id_Estatus_Pago.HasValue ?
                new ObjectParameter("Id_Estatus_Pago", id_Estatus_Pago) :
                new ObjectParameter("Id_Estatus_Pago", typeof(int));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_ProveedorParameter = id_Proveedor.HasValue ?
                new ObjectParameter("Id_Proveedor", id_Proveedor) :
                new ObjectParameter("Id_Proveedor", typeof(int));
    
            var id_BancoParameter = id_Banco.HasValue ?
                new ObjectParameter("Id_Banco", id_Banco) :
                new ObjectParameter("Id_Banco", typeof(int));
    
            var id_ClabeParameter = id_Clabe.HasValue ?
                new ObjectParameter("Id_Clabe", id_Clabe) :
                new ObjectParameter("Id_Clabe", typeof(int));
    
            var importe_TotalParameter = importe_Total.HasValue ?
                new ObjectParameter("Importe_Total", importe_Total) :
                new ObjectParameter("Importe_Total", typeof(decimal));
    
            var f_Compromiso_PagoParameter = f_Compromiso_Pago.HasValue ?
                new ObjectParameter("F_Compromiso_Pago", f_Compromiso_Pago) :
                new ObjectParameter("F_Compromiso_Pago", typeof(System.DateTime));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(bool));
    
            var id_ProyectoParameter = id_Proyecto.HasValue ?
                new ObjectParameter("Id_Proyecto", id_Proyecto) :
                new ObjectParameter("Id_Proyecto", typeof(int));
    
            var contratoParameter = contrato.HasValue ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(bool));
    
            var id_ContratoParameter = id_Contrato.HasValue ?
                new ObjectParameter("Id_Contrato", id_Contrato) :
                new ObjectParameter("Id_Contrato", typeof(int));
    
            var anticipoParameter = anticipo.HasValue ?
                new ObjectParameter("Anticipo", anticipo) :
                new ObjectParameter("Anticipo", typeof(bool));
    
            var id_MonedaParameter = id_Moneda.HasValue ?
                new ObjectParameter("Id_Moneda", id_Moneda) :
                new ObjectParameter("Id_Moneda", typeof(int));
    
            var id_RubroParameter = id_Rubro.HasValue ?
                new ObjectParameter("Id_Rubro", id_Rubro) :
                new ObjectParameter("Id_Rubro", typeof(int));
    
            var id_IvaParameter = id_Iva.HasValue ?
                new ObjectParameter("Id_Iva", id_Iva) :
                new ObjectParameter("Id_Iva", typeof(int));
    
            var retencionesParameter = retenciones.HasValue ?
                new ObjectParameter("Retenciones", retenciones) :
                new ObjectParameter("Retenciones", typeof(decimal));
    
            var iSRParameter = iSR.HasValue ?
                new ObjectParameter("ISR", iSR) :
                new ObjectParameter("ISR", typeof(decimal));
    
            var folio_FiscalParameter = folio_Fiscal != null ?
                new ObjectParameter("Folio_Fiscal", folio_Fiscal) :
                new ObjectParameter("Folio_Fiscal", typeof(string));
    
            var id_N_CuentaParameter = id_N_Cuenta.HasValue ?
                new ObjectParameter("Id_N_Cuenta", id_N_Cuenta) :
                new ObjectParameter("Id_N_Cuenta", typeof(int));
    
            var fecha_Anticipo_FacturaParameter = fecha_Anticipo_Factura.HasValue ?
                new ObjectParameter("Fecha_Anticipo_Factura", fecha_Anticipo_Factura) :
                new ObjectParameter("Fecha_Anticipo_Factura", typeof(System.DateTime));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(decimal));
    
            var f_Emision_FacturaParameter = f_Emision_Factura.HasValue ?
                new ObjectParameter("F_Emision_Factura", f_Emision_Factura) :
                new ObjectParameter("F_Emision_Factura", typeof(System.DateTime));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var id_Tipo_PagoParameter = id_Tipo_Pago.HasValue ?
                new ObjectParameter("Id_Tipo_Pago", id_Tipo_Pago) :
                new ObjectParameter("Id_Tipo_Pago", typeof(int));
    
            var n_CotizacionParameter = n_Cotizacion != null ?
                new ObjectParameter("N_Cotizacion", n_Cotizacion) :
                new ObjectParameter("N_Cotizacion", typeof(string));
    
            var solicitado_porParameter = solicitado_por != null ?
                new ObjectParameter("Solicitado_por", solicitado_por) :
                new ObjectParameter("Solicitado_por", typeof(string));
    
            var id_ClasificacionParameter = id_Clasificacion.HasValue ?
                new ObjectParameter("Id_Clasificacion", id_Clasificacion) :
                new ObjectParameter("Id_Clasificacion", typeof(int));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var id_Solicitado_porParameter = id_Solicitado_por.HasValue ?
                new ObjectParameter("Id_Solicitado_por", id_Solicitado_por) :
                new ObjectParameter("Id_Solicitado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupPagos", id_PagoParameter, id_Estatus_PagoParameter, id_EmpresaParameter, id_ProveedorParameter, id_BancoParameter, id_ClabeParameter, importe_TotalParameter, f_Compromiso_PagoParameter, proyectoParameter, id_ProyectoParameter, contratoParameter, id_ContratoParameter, anticipoParameter, id_MonedaParameter, id_RubroParameter, id_IvaParameter, retencionesParameter, iSRParameter, folio_FiscalParameter, id_N_CuentaParameter, fecha_Anticipo_FacturaParameter, otrosParameter, f_Emision_FacturaParameter, creado_porParameter, comentarioParameter, id_Tipo_PagoParameter, n_CotizacionParameter, solicitado_porParameter, id_ClasificacionParameter, iVAParameter, id_Solicitado_porParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSel_Empresas_Usuario_Result> spSel_Empresas_Usuario(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_Empresas_Usuario_Result>("spSel_Empresas_Usuario", id_UsuarioParameter);
        }
    
        public virtual ObjectResult<spSelEmpresas_Usuario_Result> spSelEmpresas_Usuario(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelEmpresas_Usuario_Result>("spSelEmpresas_Usuario", id_UsuarioParameter);
        }
    
        public virtual ObjectResult<spSel_Codole_Result> spSel_Codole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_Codole_Result>("spSel_Codole");
        }
    
        public virtual ObjectResult<spSelV_Usuarios_Legal_Result> spSelV_Usuarios_Legal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelV_Usuarios_Legal_Result>("spSelV_Usuarios_Legal");
        }
    
        public virtual ObjectResult<spSel_Documentos_Codole_Result> spSel_Documentos_Codole(Nullable<int> id_Codole)
        {
            var id_CodoleParameter = id_Codole.HasValue ?
                new ObjectParameter("Id_Codole", id_Codole) :
                new ObjectParameter("Id_Codole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_Documentos_Codole_Result>("spSel_Documentos_Codole", id_CodoleParameter);
        }
    
        public virtual int spIns_Codole(Nullable<int> id_Tipo_Codole, Nullable<System.DateTime> f_Init, Nullable<System.DateTime> f_Fin, Nullable<System.DateTime> f_Firma, Nullable<int> creado_por, string encargado_Firmas, string codigo_Codole, Nullable<int> id_Empresa, Nullable<int> id_Proveedor, Nullable<bool> proyecto, Nullable<int> id_Proyecto, Nullable<int> id_Solicitado_por, Nullable<int> id_Valido_por, Nullable<int> id_Generado_por, Nullable<bool> indefinido, ObjectParameter id_Codole, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_Tipo_CodoleParameter = id_Tipo_Codole.HasValue ?
                new ObjectParameter("Id_Tipo_Codole", id_Tipo_Codole) :
                new ObjectParameter("Id_Tipo_Codole", typeof(int));
    
            var f_InitParameter = f_Init.HasValue ?
                new ObjectParameter("F_Init", f_Init) :
                new ObjectParameter("F_Init", typeof(System.DateTime));
    
            var f_FinParameter = f_Fin.HasValue ?
                new ObjectParameter("F_Fin", f_Fin) :
                new ObjectParameter("F_Fin", typeof(System.DateTime));
    
            var f_FirmaParameter = f_Firma.HasValue ?
                new ObjectParameter("F_Firma", f_Firma) :
                new ObjectParameter("F_Firma", typeof(System.DateTime));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var encargado_FirmasParameter = encargado_Firmas != null ?
                new ObjectParameter("Encargado_Firmas", encargado_Firmas) :
                new ObjectParameter("Encargado_Firmas", typeof(string));
    
            var codigo_CodoleParameter = codigo_Codole != null ?
                new ObjectParameter("Codigo_Codole", codigo_Codole) :
                new ObjectParameter("Codigo_Codole", typeof(string));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_ProveedorParameter = id_Proveedor.HasValue ?
                new ObjectParameter("Id_Proveedor", id_Proveedor) :
                new ObjectParameter("Id_Proveedor", typeof(int));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(bool));
    
            var id_ProyectoParameter = id_Proyecto.HasValue ?
                new ObjectParameter("Id_Proyecto", id_Proyecto) :
                new ObjectParameter("Id_Proyecto", typeof(int));
    
            var id_Solicitado_porParameter = id_Solicitado_por.HasValue ?
                new ObjectParameter("Id_Solicitado_por", id_Solicitado_por) :
                new ObjectParameter("Id_Solicitado_por", typeof(int));
    
            var id_Valido_porParameter = id_Valido_por.HasValue ?
                new ObjectParameter("Id_Valido_por", id_Valido_por) :
                new ObjectParameter("Id_Valido_por", typeof(int));
    
            var id_Generado_porParameter = id_Generado_por.HasValue ?
                new ObjectParameter("Id_Generado_por", id_Generado_por) :
                new ObjectParameter("Id_Generado_por", typeof(int));
    
            var indefinidoParameter = indefinido.HasValue ?
                new ObjectParameter("Indefinido", indefinido) :
                new ObjectParameter("Indefinido", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIns_Codole", id_Tipo_CodoleParameter, f_InitParameter, f_FinParameter, f_FirmaParameter, creado_porParameter, encargado_FirmasParameter, codigo_CodoleParameter, id_EmpresaParameter, id_ProveedorParameter, proyectoParameter, id_ProyectoParameter, id_Solicitado_porParameter, id_Valido_porParameter, id_Generado_porParameter, indefinidoParameter, id_Codole, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPup_Codole(Nullable<int> id_Codole, Nullable<int> id_Tipo_Codole, Nullable<System.DateTime> f_Init, Nullable<System.DateTime> f_Fin, Nullable<System.DateTime> f_Firma, Nullable<int> creado_por, string encargado_Firmas, string codigo_Codole, Nullable<int> id_Empresa, Nullable<int> id_Proveedor, Nullable<bool> proyecto, Nullable<int> id_Proyecto, Nullable<int> id_Solicitado_por, Nullable<int> id_Valido_por, Nullable<int> id_Generado_por, Nullable<bool> indefinido, Nullable<bool> activo, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_CodoleParameter = id_Codole.HasValue ?
                new ObjectParameter("Id_Codole", id_Codole) :
                new ObjectParameter("Id_Codole", typeof(int));
    
            var id_Tipo_CodoleParameter = id_Tipo_Codole.HasValue ?
                new ObjectParameter("Id_Tipo_Codole", id_Tipo_Codole) :
                new ObjectParameter("Id_Tipo_Codole", typeof(int));
    
            var f_InitParameter = f_Init.HasValue ?
                new ObjectParameter("F_Init", f_Init) :
                new ObjectParameter("F_Init", typeof(System.DateTime));
    
            var f_FinParameter = f_Fin.HasValue ?
                new ObjectParameter("F_Fin", f_Fin) :
                new ObjectParameter("F_Fin", typeof(System.DateTime));
    
            var f_FirmaParameter = f_Firma.HasValue ?
                new ObjectParameter("F_Firma", f_Firma) :
                new ObjectParameter("F_Firma", typeof(System.DateTime));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var encargado_FirmasParameter = encargado_Firmas != null ?
                new ObjectParameter("Encargado_Firmas", encargado_Firmas) :
                new ObjectParameter("Encargado_Firmas", typeof(string));
    
            var codigo_CodoleParameter = codigo_Codole != null ?
                new ObjectParameter("Codigo_Codole", codigo_Codole) :
                new ObjectParameter("Codigo_Codole", typeof(string));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_ProveedorParameter = id_Proveedor.HasValue ?
                new ObjectParameter("Id_Proveedor", id_Proveedor) :
                new ObjectParameter("Id_Proveedor", typeof(int));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(bool));
    
            var id_ProyectoParameter = id_Proyecto.HasValue ?
                new ObjectParameter("Id_Proyecto", id_Proyecto) :
                new ObjectParameter("Id_Proyecto", typeof(int));
    
            var id_Solicitado_porParameter = id_Solicitado_por.HasValue ?
                new ObjectParameter("Id_Solicitado_por", id_Solicitado_por) :
                new ObjectParameter("Id_Solicitado_por", typeof(int));
    
            var id_Valido_porParameter = id_Valido_por.HasValue ?
                new ObjectParameter("Id_Valido_por", id_Valido_por) :
                new ObjectParameter("Id_Valido_por", typeof(int));
    
            var id_Generado_porParameter = id_Generado_por.HasValue ?
                new ObjectParameter("Id_Generado_por", id_Generado_por) :
                new ObjectParameter("Id_Generado_por", typeof(int));
    
            var indefinidoParameter = indefinido.HasValue ?
                new ObjectParameter("Indefinido", indefinido) :
                new ObjectParameter("Indefinido", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPup_Codole", id_CodoleParameter, id_Tipo_CodoleParameter, f_InitParameter, f_FinParameter, f_FirmaParameter, creado_porParameter, encargado_FirmasParameter, codigo_CodoleParameter, id_EmpresaParameter, id_ProveedorParameter, proyectoParameter, id_ProyectoParameter, id_Solicitado_porParameter, id_Valido_porParameter, id_Generado_porParameter, indefinidoParameter, activoParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelV_Contratos_Result> spSelV_Contratos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelV_Contratos_Result>("spSelV_Contratos");
        }
    
        public virtual ObjectResult<spSelContrato_Id_Result> spSelContrato_Id(Nullable<int> id_Contrato)
        {
            var id_ContratoParameter = id_Contrato.HasValue ?
                new ObjectParameter("Id_Contrato", id_Contrato) :
                new ObjectParameter("Id_Contrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelContrato_Id_Result>("spSelContrato_Id", id_ContratoParameter);
        }
    
        public virtual ObjectResult<spSel_V_Re_Documento_Contrato_Id_Result> spSel_V_Re_Documento_Contrato_Id(Nullable<int> id_Contrato)
        {
            var id_ContratoParameter = id_Contrato.HasValue ?
                new ObjectParameter("Id_Contrato", id_Contrato) :
                new ObjectParameter("Id_Contrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSel_V_Re_Documento_Contrato_Id_Result>("spSel_V_Re_Documento_Contrato_Id", id_ContratoParameter);
        }
    
        public virtual ObjectResult<spSelRConta_Result> spSelRConta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRConta_Result>("spSelRConta");
        }
    
        public virtual ObjectResult<spSelUsuariosConta_Result> spSelUsuariosConta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUsuariosConta_Result>("spSelUsuariosConta");
        }
    
        public virtual ObjectResult<spSelDocumentosConta_Result> spSelDocumentosConta(Nullable<int> idRConta)
        {
            var idRContaParameter = idRConta.HasValue ?
                new ObjectParameter("IdRConta", idRConta) :
                new ObjectParameter("IdRConta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentosConta_Result>("spSelDocumentosConta", idRContaParameter);
        }
    
        public virtual int spInsDocumentosRConta(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idRConta, Nullable<int> idTipoRConta, ObjectParameter nombre_Virtual, ObjectParameter idDocumentoRConta, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idRContaParameter = idRConta.HasValue ?
                new ObjectParameter("IdRConta", idRConta) :
                new ObjectParameter("IdRConta", typeof(int));
    
            var idTipoRContaParameter = idTipoRConta.HasValue ?
                new ObjectParameter("IdTipoRConta", idTipoRConta) :
                new ObjectParameter("IdTipoRConta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentosRConta", nombreParameter, id_FtpParameter, creado_porParameter, idRContaParameter, idTipoRContaParameter, nombre_Virtual, idDocumentoRConta, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelRRHH_Result> spSelRRHH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRRHH_Result>("spSelRRHH");
        }
    
        public virtual ObjectResult<spSelUsuariosRRHHD_Result> spSelUsuariosRRHHD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUsuariosRRHHD_Result>("spSelUsuariosRRHHD");
        }
    
        public virtual ObjectResult<spSelDocumentosRRHHD_Result> spSelDocumentosRRHHD(Nullable<int> idRRHHD)
        {
            var idRRHHDParameter = idRRHHD.HasValue ?
                new ObjectParameter("IdRRHHD", idRRHHD) :
                new ObjectParameter("IdRRHHD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentosRRHHD_Result>("spSelDocumentosRRHHD", idRRHHDParameter);
        }
    
        public virtual int spInsDocumentosRRHHD(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idRRHHD, Nullable<int> idTipoRRHHD, ObjectParameter nombre_Virtual, ObjectParameter idDocumentoRRHHD, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idRRHHDParameter = idRRHHD.HasValue ?
                new ObjectParameter("IdRRHHD", idRRHHD) :
                new ObjectParameter("IdRRHHD", typeof(int));
    
            var idTipoRRHHDParameter = idTipoRRHHD.HasValue ?
                new ObjectParameter("IdTipoRRHHD", idTipoRRHHD) :
                new ObjectParameter("IdTipoRRHHD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentosRRHHD", nombreParameter, id_FtpParameter, creado_porParameter, idRRHHDParameter, idTipoRRHHDParameter, nombre_Virtual, idDocumentoRRHHD, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelRPlancio_Result> spSelRPlancio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRPlancio_Result>("spSelRPlancio");
        }
    
        public virtual ObjectResult<spSelDocumentosRPlancio_Result> spSelDocumentosRPlancio(Nullable<int> idRPlancio)
        {
            var idRPlancioParameter = idRPlancio.HasValue ?
                new ObjectParameter("IdRPlancio", idRPlancio) :
                new ObjectParameter("IdRPlancio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentosRPlancio_Result>("spSelDocumentosRPlancio", idRPlancioParameter);
        }
    
        public virtual ObjectResult<spSelVUsuariosPlaneacion_Result> spSelVUsuariosPlaneacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelVUsuariosPlaneacion_Result>("spSelVUsuariosPlaneacion");
        }
    
        public virtual int spInsDocumentoRPlancio(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idRPlancio, Nullable<int> idTipoRPlancio, ObjectParameter nombre_Virtual, ObjectParameter id_Documento, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idRPlancioParameter = idRPlancio.HasValue ?
                new ObjectParameter("IdRPlancio", idRPlancio) :
                new ObjectParameter("IdRPlancio", typeof(int));
    
            var idTipoRPlancioParameter = idTipoRPlancio.HasValue ?
                new ObjectParameter("IdTipoRPlancio", idTipoRPlancio) :
                new ObjectParameter("IdTipoRPlancio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentoRPlancio", nombreParameter, id_FtpParameter, creado_porParameter, idRPlancioParameter, idTipoRPlancioParameter, nombre_Virtual, id_Documento, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelRVinculaciones_Result> spSelRVinculaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRVinculaciones_Result>("spSelRVinculaciones");
        }
    
        public virtual int spInsDocumentosRVincu(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idRVinculaciones, Nullable<int> idTipoRVinculaciones, ObjectParameter nombre_Virtual, ObjectParameter idDocumentoRVinculaciones, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idRVinculacionesParameter = idRVinculaciones.HasValue ?
                new ObjectParameter("IdRVinculaciones", idRVinculaciones) :
                new ObjectParameter("IdRVinculaciones", typeof(int));
    
            var idTipoRVinculacionesParameter = idTipoRVinculaciones.HasValue ?
                new ObjectParameter("IdTipoRVinculaciones", idTipoRVinculaciones) :
                new ObjectParameter("IdTipoRVinculaciones", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentosRVincu", nombreParameter, id_FtpParameter, creado_porParameter, idRVinculacionesParameter, idTipoRVinculacionesParameter, nombre_Virtual, idDocumentoRVinculaciones, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelUsuariosVinculaciones_Result> spSelUsuariosVinculaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUsuariosVinculaciones_Result>("spSelUsuariosVinculaciones");
        }
    
        public virtual ObjectResult<spSelDocumentosVinculaciones_Result> spSelDocumentosVinculaciones(Nullable<int> idRVinculaciones)
        {
            var idRVinculacionesParameter = idRVinculaciones.HasValue ?
                new ObjectParameter("IdRVinculaciones", idRVinculaciones) :
                new ObjectParameter("IdRVinculaciones", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentosVinculaciones_Result>("spSelDocumentosVinculaciones", idRVinculacionesParameter);
        }
    
        public virtual ObjectResult<spSelRProcesos_Result> spSelRProcesos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRProcesos_Result>("spSelRProcesos");
        }
    
        public virtual ObjectResult<spSelUsuariosProc_Result> spSelUsuariosProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUsuariosProc_Result>("spSelUsuariosProc");
        }
    
        public virtual ObjectResult<spSelDocumentosProcs_Result> spSelDocumentosProcs(Nullable<int> idRProcesos)
        {
            var idRProcesosParameter = idRProcesos.HasValue ?
                new ObjectParameter("IdRProcesos", idRProcesos) :
                new ObjectParameter("IdRProcesos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDocumentosProcs_Result>("spSelDocumentosProcs", idRProcesosParameter);
        }
    
        public virtual int spInsDocumentosRProcesos(string nombre, Nullable<int> id_Ftp, Nullable<int> creado_por, Nullable<int> idRProcesos, Nullable<int> idTipoRProcesos, ObjectParameter nombre_Virtual, ObjectParameter idDocumentosRProcesos, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var id_FtpParameter = id_Ftp.HasValue ?
                new ObjectParameter("Id_Ftp", id_Ftp) :
                new ObjectParameter("Id_Ftp", typeof(int));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var idRProcesosParameter = idRProcesos.HasValue ?
                new ObjectParameter("IdRProcesos", idRProcesos) :
                new ObjectParameter("IdRProcesos", typeof(int));
    
            var idTipoRProcesosParameter = idTipoRProcesos.HasValue ?
                new ObjectParameter("IdTipoRProcesos", idTipoRProcesos) :
                new ObjectParameter("IdTipoRProcesos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsDocumentosRProcesos", nombreParameter, id_FtpParameter, creado_porParameter, idRProcesosParameter, idTipoRProcesosParameter, nombre_Virtual, idDocumentosRProcesos, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelPagos_Procesados_UsuarioI_Result> spSelPagos_Procesados_UsuarioI(Nullable<int> creado_por)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Procesados_UsuarioI_Result>("spSelPagos_Procesados_UsuarioI", creado_porParameter);
        }
    
        public virtual ObjectResult<spSelPagos_Captura_UsuarioI_Result> spSelPagos_Captura_UsuarioI(Nullable<int> creado_por)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagos_Captura_UsuarioI_Result>("spSelPagos_Captura_UsuarioI", creado_porParameter);
        }
    
        public virtual int spInsPagoIngresos(Nullable<int> creado_por, ObjectParameter id_Pago, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsPagoIngresos", creado_porParameter, id_Pago, vValor_Mensaje, vMensaje);
        }
    
        public virtual int spPupPagosIN(Nullable<int> id_Pago, Nullable<int> id_Estatus_Pago, Nullable<int> id_Empresa, Nullable<int> id_Proveedor, Nullable<int> id_Banco, Nullable<int> id_Clabe, Nullable<decimal> importe_Total, Nullable<System.DateTime> f_Compromiso_Pago, Nullable<bool> proyecto, Nullable<int> id_Proyecto, Nullable<bool> contrato, Nullable<int> id_Contrato, Nullable<bool> anticipo, Nullable<int> id_Moneda, Nullable<int> id_Rubro, Nullable<int> id_Iva, Nullable<decimal> retenciones, Nullable<decimal> iSR, string folio_Fiscal, Nullable<int> id_N_Cuenta, Nullable<System.DateTime> fecha_Anticipo_Factura, Nullable<decimal> otros, Nullable<System.DateTime> f_Emision_Factura, Nullable<int> creado_por, string comentario, Nullable<int> id_Tipo_Pago, string n_Cotizacion, string solicitado_por, Nullable<int> id_Clasificacion, Nullable<decimal> iVA, Nullable<int> id_Solicitado_por, Nullable<int> idBancoRec, Nullable<int> idClabeRec, Nullable<int> idCuentaRec, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_Estatus_PagoParameter = id_Estatus_Pago.HasValue ?
                new ObjectParameter("Id_Estatus_Pago", id_Estatus_Pago) :
                new ObjectParameter("Id_Estatus_Pago", typeof(int));
    
            var id_EmpresaParameter = id_Empresa.HasValue ?
                new ObjectParameter("Id_Empresa", id_Empresa) :
                new ObjectParameter("Id_Empresa", typeof(int));
    
            var id_ProveedorParameter = id_Proveedor.HasValue ?
                new ObjectParameter("Id_Proveedor", id_Proveedor) :
                new ObjectParameter("Id_Proveedor", typeof(int));
    
            var id_BancoParameter = id_Banco.HasValue ?
                new ObjectParameter("Id_Banco", id_Banco) :
                new ObjectParameter("Id_Banco", typeof(int));
    
            var id_ClabeParameter = id_Clabe.HasValue ?
                new ObjectParameter("Id_Clabe", id_Clabe) :
                new ObjectParameter("Id_Clabe", typeof(int));
    
            var importe_TotalParameter = importe_Total.HasValue ?
                new ObjectParameter("Importe_Total", importe_Total) :
                new ObjectParameter("Importe_Total", typeof(decimal));
    
            var f_Compromiso_PagoParameter = f_Compromiso_Pago.HasValue ?
                new ObjectParameter("F_Compromiso_Pago", f_Compromiso_Pago) :
                new ObjectParameter("F_Compromiso_Pago", typeof(System.DateTime));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(bool));
    
            var id_ProyectoParameter = id_Proyecto.HasValue ?
                new ObjectParameter("Id_Proyecto", id_Proyecto) :
                new ObjectParameter("Id_Proyecto", typeof(int));
    
            var contratoParameter = contrato.HasValue ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(bool));
    
            var id_ContratoParameter = id_Contrato.HasValue ?
                new ObjectParameter("Id_Contrato", id_Contrato) :
                new ObjectParameter("Id_Contrato", typeof(int));
    
            var anticipoParameter = anticipo.HasValue ?
                new ObjectParameter("Anticipo", anticipo) :
                new ObjectParameter("Anticipo", typeof(bool));
    
            var id_MonedaParameter = id_Moneda.HasValue ?
                new ObjectParameter("Id_Moneda", id_Moneda) :
                new ObjectParameter("Id_Moneda", typeof(int));
    
            var id_RubroParameter = id_Rubro.HasValue ?
                new ObjectParameter("Id_Rubro", id_Rubro) :
                new ObjectParameter("Id_Rubro", typeof(int));
    
            var id_IvaParameter = id_Iva.HasValue ?
                new ObjectParameter("Id_Iva", id_Iva) :
                new ObjectParameter("Id_Iva", typeof(int));
    
            var retencionesParameter = retenciones.HasValue ?
                new ObjectParameter("Retenciones", retenciones) :
                new ObjectParameter("Retenciones", typeof(decimal));
    
            var iSRParameter = iSR.HasValue ?
                new ObjectParameter("ISR", iSR) :
                new ObjectParameter("ISR", typeof(decimal));
    
            var folio_FiscalParameter = folio_Fiscal != null ?
                new ObjectParameter("Folio_Fiscal", folio_Fiscal) :
                new ObjectParameter("Folio_Fiscal", typeof(string));
    
            var id_N_CuentaParameter = id_N_Cuenta.HasValue ?
                new ObjectParameter("Id_N_Cuenta", id_N_Cuenta) :
                new ObjectParameter("Id_N_Cuenta", typeof(int));
    
            var fecha_Anticipo_FacturaParameter = fecha_Anticipo_Factura.HasValue ?
                new ObjectParameter("Fecha_Anticipo_Factura", fecha_Anticipo_Factura) :
                new ObjectParameter("Fecha_Anticipo_Factura", typeof(System.DateTime));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(decimal));
    
            var f_Emision_FacturaParameter = f_Emision_Factura.HasValue ?
                new ObjectParameter("F_Emision_Factura", f_Emision_Factura) :
                new ObjectParameter("F_Emision_Factura", typeof(System.DateTime));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var id_Tipo_PagoParameter = id_Tipo_Pago.HasValue ?
                new ObjectParameter("Id_Tipo_Pago", id_Tipo_Pago) :
                new ObjectParameter("Id_Tipo_Pago", typeof(int));
    
            var n_CotizacionParameter = n_Cotizacion != null ?
                new ObjectParameter("N_Cotizacion", n_Cotizacion) :
                new ObjectParameter("N_Cotizacion", typeof(string));
    
            var solicitado_porParameter = solicitado_por != null ?
                new ObjectParameter("Solicitado_por", solicitado_por) :
                new ObjectParameter("Solicitado_por", typeof(string));
    
            var id_ClasificacionParameter = id_Clasificacion.HasValue ?
                new ObjectParameter("Id_Clasificacion", id_Clasificacion) :
                new ObjectParameter("Id_Clasificacion", typeof(int));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            var id_Solicitado_porParameter = id_Solicitado_por.HasValue ?
                new ObjectParameter("Id_Solicitado_por", id_Solicitado_por) :
                new ObjectParameter("Id_Solicitado_por", typeof(int));
    
            var idBancoRecParameter = idBancoRec.HasValue ?
                new ObjectParameter("IdBancoRec", idBancoRec) :
                new ObjectParameter("IdBancoRec", typeof(int));
    
            var idClabeRecParameter = idClabeRec.HasValue ?
                new ObjectParameter("IdClabeRec", idClabeRec) :
                new ObjectParameter("IdClabeRec", typeof(int));
    
            var idCuentaRecParameter = idCuentaRec.HasValue ?
                new ObjectParameter("IdCuentaRec", idCuentaRec) :
                new ObjectParameter("IdCuentaRec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupPagosIN", id_PagoParameter, id_Estatus_PagoParameter, id_EmpresaParameter, id_ProveedorParameter, id_BancoParameter, id_ClabeParameter, importe_TotalParameter, f_Compromiso_PagoParameter, proyectoParameter, id_ProyectoParameter, contratoParameter, id_ContratoParameter, anticipoParameter, id_MonedaParameter, id_RubroParameter, id_IvaParameter, retencionesParameter, iSRParameter, folio_FiscalParameter, id_N_CuentaParameter, fecha_Anticipo_FacturaParameter, otrosParameter, f_Emision_FacturaParameter, creado_porParameter, comentarioParameter, id_Tipo_PagoParameter, n_CotizacionParameter, solicitado_porParameter, id_ClasificacionParameter, iVAParameter, id_Solicitado_porParameter, idBancoRecParameter, idClabeRecParameter, idCuentaRecParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelPagosAutoTesoreria_Result> spSelPagosAutoTesoreria(Nullable<int> id_Usuario)
        {
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPagosAutoTesoreria_Result>("spSelPagosAutoTesoreria", id_UsuarioParameter);
        }
    
        public virtual int spPupAutorizacionesPago2(Nullable<int> id_Pago, Nullable<int> id_Estatus_Pago, string comentarios, Nullable<int> creado_por, Nullable<bool> autorizacion, ObjectParameter vValor_Mensaje, ObjectParameter vMensaje)
        {
            var id_PagoParameter = id_Pago.HasValue ?
                new ObjectParameter("Id_Pago", id_Pago) :
                new ObjectParameter("Id_Pago", typeof(int));
    
            var id_Estatus_PagoParameter = id_Estatus_Pago.HasValue ?
                new ObjectParameter("Id_Estatus_Pago", id_Estatus_Pago) :
                new ObjectParameter("Id_Estatus_Pago", typeof(int));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var creado_porParameter = creado_por.HasValue ?
                new ObjectParameter("Creado_por", creado_por) :
                new ObjectParameter("Creado_por", typeof(int));
    
            var autorizacionParameter = autorizacion.HasValue ?
                new ObjectParameter("Autorizacion", autorizacion) :
                new ObjectParameter("Autorizacion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPupAutorizacionesPago2", id_PagoParameter, id_Estatus_PagoParameter, comentariosParameter, creado_porParameter, autorizacionParameter, vValor_Mensaje, vMensaje);
        }
    
        public virtual ObjectResult<spSelVUltimosSaldos2_Result> spSelVUltimosSaldos2(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelVUltimosSaldos2_Result>("spSelVUltimosSaldos2", idUsuarioParameter);
        }
    
        public virtual ObjectResult<spSelMovimientos_Result> spSelMovimientos(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMovimientos_Result>("spSelMovimientos", idUsuarioParameter);
        }
    
        public virtual ObjectResult<spSelMovimientos2_Result> spSelMovimientos2(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMovimientos2_Result>("spSelMovimientos2", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spSelPromedioSaldos2_Result> spSelPromedioSaldos2(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPromedioSaldos2_Result>("spSelPromedioSaldos2", idUsuarioParameter);
        }
    
        public virtual ObjectResult<spSelPromedioSaldos_Result> spSelPromedioSaldos(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelPromedioSaldos_Result>("spSelPromedioSaldos", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spSelDashSaldoProyectos_Result> spSelDashSaldoProyectos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelDashSaldoProyectos_Result>("spSelDashSaldoProyectos");
        }
    
        public virtual ObjectResult<spSelHistoricoPagos_Result> spSelHistoricoPagos(Nullable<System.DateTime> fInit, Nullable<System.DateTime> fFin)
        {
            var fInitParameter = fInit.HasValue ?
                new ObjectParameter("FInit", fInit) :
                new ObjectParameter("FInit", typeof(System.DateTime));
    
            var fFinParameter = fFin.HasValue ?
                new ObjectParameter("FFin", fFin) :
                new ObjectParameter("FFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelHistoricoPagos_Result>("spSelHistoricoPagos", fInitParameter, fFinParameter);
        }
    
        public virtual ObjectResult<SpSelReqCompra_Result> SpSelReqCompra(Nullable<int> usuario)
        {
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSelReqCompra_Result>("SpSelReqCompra", usuarioParameter);
        }
    
        public virtual int spSelRenombre_Documento(ObjectParameter nombre_Virtual)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSelRenombre_Documento", nombre_Virtual);
        }
    
        public virtual ObjectResult<spSelReporteServicios_Result> spSelReporteServicios(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelReporteServicios_Result>("spSelReporteServicios", idEmpresaParameter);
        }
    }
}
