@model  Model.TrvRepConceptos

@{
    ViewBag.Title = "Conceptos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    <script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript">

        function ReturnToLib() {
             window.location = '@Url.Action("LibRequest", "Travel")';
        }

        function msg(m) {
            alert(m);
        }

        function OnSuccess(x, y) {
            var laURLDeLaVista = '@Url.Action("AlterStatus", "Travel")';
            var result = false;
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: laURLDeLaVista,
                data: { id: x, status: y },
                success: function (response) {
                    swal({
                        title: 'Hecho',
                        text: "Has marcado la solicitud como APROBADA!",
                        type: 'success',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-success',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result) {
                            setTimeout(function () { window.location.href = '@Url.Action("TravelDetail", "Travel", new { reqID = int.Parse(ViewBag.Request.IdTrvReq.ToString()), status = 3 })'; }, 250);
                        }
                    })
                }

            });
        }

        function OnReject(x, y) {
                 var laURLDeLaVista = '@Url.Action("AlterStatus", "Travel")';
                $.ajax({
                    cache: false,
                    async: true,
                    type: "POST",
                    url: laURLDeLaVista,
                    data: { id: x, status: y },
                    success: function (response) {
                        swal({
                            title: 'Hecho',
                            text: "Has marcado la solicitud como RECHAZADO!",
                            type: 'error',
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result) {
                                setTimeout(function () { window.location.href = '@Url.Action("TravelDetail", "Travel", new { reqID = int.Parse(ViewBag.Request.IdTrvReq.ToString()), status = 2 })'; }, 250);
                            }
                        })
                    }
                });

        }

        function onBegin(respuesta) {
            console.log(respuesta + 'Bg');
        }
        function onSuccess(respuesta) {
            console.log(respuesta + 'Sc');
        }
        function onComplete(respuesta) {
            console.log(respuesta + 'Cm');
        }
        function onFailure(respuesta) {
            console.log(respuesta + 'Fl');
        }

    </script>
}


<div class="nav-align-center">
    <h3>Conceptos</h3>
</div>

<div class="col-sm-8 col-md-offset-2">
    <div class="card">
        <div class="card-header card-header-icon" data-background-color="gray" style="background:#159D93;">
            <i class="material-icons">local_atm</i>
        </div>
        <div class="card-content">
            <h4 class="card-title">Agrega los conceptos a tu solicitud</h4>

            <br />
            <br />

            <div class="row">
                @*Begin of the table card*@
                <div class="col-md-10 col-md-offset-1">
                    <div class="col-md-12">
                        <div class="card">
                            @{
                                int status = int.Parse(ViewBag.Request.IdEstatus.ToString());
                                switch (status)
                                {
                                    case 1:
                                        <div class="card-header" data-background-color="purple">
                                            <h4 class="card-title"><i class="material-icons">flight_takeoff</i>  Detalle de la solicitud</h4>
                                            <p class="category">Tu solicitud está siendo revisada</p>
                                        </div>
                                        break;
                                    case 2:
                                        <div class="card-header" data-background-color="red">
                                            <h4 class="card-title"><i class="material-icons">flight_takeoff</i>  Detalle de la solicitud</h4>
                                            <p class="category">La solicitud ha sido rechazada</p>
                                        </div>
                                        break;
                                    case 3:
                                        <div class="card-header" data-background-color="green">
                                            <h4 class="card-title"><i class="material-icons">flight_takeoff</i>  Detalle de la solicitud</h4>
                                            <p class="category">Tu solicitud ha sido aprobada</p>
                                        </div>
                                        break;
                                }
                            }
                            <div class="card-content">
                                <div class="material-datatables">
                                    <table id="ticketDetailTable" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100" style="width:100%">
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">assignment_ind</i> Empresa que solicita:
                                            </td>
                                            <td style="width:60%">
                                                @string.Format("{0}", ViewBag.Request.Empresas.Razon_Social)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">public</i> Destino:
                                            </td>
                                            <td style="width:60%">
                                                @string.Format("{0}, {1}", ViewBag.Request.PaisDes, ViewBag.Request.Destino)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">date_range</i> Fecha de partida:
                                            </td>
                                            <td style="width:60%">
                                                @ViewBag.Request.FPartida.ToString("dd MMMM yyyy")
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">date_range</i> Fecha de retorno:
                                            </td>
                                            <td style="width:60%">
                                                @ViewBag.Request.FRetorno.ToString("dd MMMM yyyy")
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">commute</i> Principal medio de transporte:
                                            </td>
                                            <td style="width:60%">
                                                @string.Format("{0}", ViewBag.Request.TrvTransporte.Transporte)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">brightness_4</i> Turno de preferencia:
                                            </td>
                                            <td style="width:60%">
                                                @ViewBag.Request.TrvTurno.Turno
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">help_outline</i> Motivo del viaje:
                                            </td>
                                            <td style="width:60%">
                                                @ViewBag.Request.Motivo
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">text_fields</i> Necesidades específicas
                                            </td>
                                            <td style="width:60%">
                                                @ViewBag.Request.Necesidades
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:40%">
                                                <i class="material-icons">money</i> Monto estimado:
                                            </td>
                                            <td style="width:60%">
                                                <i class="material-icons">attach_money</i> @string.Format("{0:n}", ViewBag.Request.MViaticos)
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> @*En of the table card*@

            <div class="row">
                @*Begin of the table card*@
                <div class="col-md-10 col-md-offset-1">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header card-header-text" data-background-color="purple">
                                <i class="material-icons">credit_card</i> <a href="#" rel="tooltip" data-placement="right" title="Debe de justificar el monto estimado">Detalle de conceptos</a>
                            </div>
                            <br />
                            <div class="card-content">
                                <div class="material-datatables">

                                    <div class="material-datatables">
                                        <table id="ticketDetailTable" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100" style="width:100%">

                                            @{
                                                decimal total = 0;
                                            }

                                            @if (ViewBag.Conceptos.Count == 0)
                                            {
                                                <tr>
                                                    <td>
                                                        <h3>
                                                            No has registrado nada aún
                                                        </h3>
                                                    </td>
                                                </tr>
                                            }
                                            else
                                            {
                                                foreach (var item in ViewBag.Conceptos)
                                                {

                                                    int i = int.Parse(item.IdTrvConceptos.ToString());

                                                    <tr>
                                                        @switch (i)
                                                        {
                                                            case 1:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">fastfood</i> Alimentos:
                                                                </td>
                                                                break;
                                                            case 2:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">local_hotel</i> Hospedaje:
                                                                </td>
                                                                break;
                                                            case 3:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">commute</i> Transporte:
                                                                </td>
                                                                break;
                                                            case 4:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">how_to_vote</i> Peaje:
                                                                </td>
                                                                break;
                                                            case 5:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">local_activity</i> Admisión:
                                                                </td>
                                                                break;
                                                            case 6:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">usb</i> Equipo o material adicional:
                                                                </td>
                                                                break;
                                                            case 7:
                                                                <td style="width:40%">
                                                                    <i class="material-icons">help</i> Otros:
                                                                </td>
                                                                break;
                                                        }

                                                        <td style="width:40%">
                                                            <span>
                                                                <i class="material-icons">attach_money</i>
                                                            </span>
                                                            @string.Format("{0:n} {1}", item.Monto, item.Ca_Moneda.Moneda)
                                                        </td>

                                                        <td style="width:20%">

                                                            @if (int.Parse(item.Creadopor.ToString()) == int.Parse(Session["IdUser"].ToString()) && int.Parse(ViewBag.Request.IdEstatus.ToString()) != 2 && int.Parse(ViewBag.Request.IdEstatus.ToString()) != 3)
                                                            {
                                                                <a href="@Url.Action("DeleteConcepto","Travel", new { id = int.Parse(item.IdTrvRepConceptos.ToString()) })" class="btn btn-danger btn-just-icon btn-round"><i class="material-icons">delete_forever</i></a>
                                                            }
                                                        </td>
                                                    </tr>

                                                    total += decimal.Parse(item.Monto.ToString());

                                                }
                                                <tr>
                                                    <td>
                                                        <h4 style="width:40%">
                                                            <strong>
                                                                Total:
                                                            </strong>
                                                        </h4>
                                                    </td>
                                                    <td style="width:40%">
                                                        <h4>
                                                            <strong>
                                                                @string.Format("$ {0:n} {1}", total, ViewBag.Conceptos[0].Ca_Moneda.Moneda)
                                                            </strong>
                                                        </h4>
                                                    </td>
                                                    <td style="width:20%"></td>
                                                </tr>
                                            }


                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> @*En of the table card*@

            @if (int.Parse(ViewBag.Request.Creadopor.ToString()) == int.Parse(Session["IdUser"].ToString()) && int.Parse(ViewBag.Request.IdEstatus.ToString()) != 2 && int.Parse(ViewBag.Request.IdEstatus.ToString()) != 3)
            {
                <div class="row">
                    @*Begin of the table card*@
                    <div class="col-md-10 col-md-offset-1">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header card-header-text" data-background-color="purple">
                                    <i class="material-icons">local_atm</i> <a href="#" rel="tooltip" data-placement="right" title="Debe de justificar el monto estimado">Agregar conceptos</a>
                                </div>
                                <div class="card-content">
                                    <div class="material-datatables">

                                        @using (Html.BeginForm("AddConcepto", "Travel"))
                                        {
                                            <div class="row">

                                                <div class="col-md-12">
                                                    @Html.DropDownListFor(x => x.IdTrvConceptos, new SelectList(ViewBag.ConceptosList, "IdTrvConceptos", "Conceptos", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                                                    @Html.ValidationMessageFor(x => x.IdTrvConceptos, null, new { @class = "badge badge-danger" })
                                                </div>

                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    @Html.DropDownListFor(x => x.Id_Moneda, new SelectList(ViewBag.Moneda, "Id_Moneda", "Moneda", -1), new { @class = "selectpicker", id = "Moneda", data_style = "btn btn-info btn-round", data_size = "10" })
                                                    @Html.ValidationMessageFor(x => x.Id_Moneda, null, new { @class = "badge badge-danger" })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <i class="material-icons">attach_money</i>
                                                    </span>
                                                    <div class="form-group label-floating">
                                                        <label class="control-label" for=@Model.Monto> Monto requerido:</label>

                                                        @Html.HiddenFor(x => x.IdTrvRepConceptos)
                                                        @Html.HiddenFor(x => x.IdTrvConceptos, new { @Value = 1 })
                                                        @Html.HiddenFor(x => x.IdTrvReq, new { @Value = ViewBag.Request.IdTrvReq })

                                                        @Html.TextBoxFor(x => x.Monto, "{0:0.00}", new { @class = "form-control", @type = "number" })
                                                        @Html.ValidationMessageFor(x => x.Monto, null, new { @class = "badge badge-danger" })

                                                    </div>
                                                </div>
                                            </div>

                                            <div class="text-center">
                                                <button type="submit" class="btn btn-primary btn-round">
                                                    <i class="material-icons">sd_card</i> Guardar
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> @*En of the table card*@
            }

            <div class="text-center">
                <div class="row">
                    <div class="nav-align-center">
                        <br />
                        @if (int.Parse(Session["IdUser"].ToString()) == 1 || int.Parse(Session["IdUser"].ToString()) == 3045 || int.Parse(Session["IdUser"].ToString()) == 3030 || int.Parse(Session["IdUser"].ToString()) == 1 || int.Parse(Session["IdUser"].ToString()) == 14 || int.Parse(Session["IdUser"].ToString()) == 3066)
                        {
                            <button class="btn btn-success btn-round" onclick=' OnSuccess(@int.Parse(ViewBag.Request.IdTrvReq.ToString()),3)'>
                                <i class="material-icons">done</i> Aprobar&nbsp;
                            </button>
                        }
                        <button class="btn btn-primary btn-round" onclick="ReturnToLib()">
                            <i class="material-icons">reply</i> Regresar
                        </button>
                        @if (int.Parse(Session["IdUser"].ToString()) == 1 || int.Parse(Session["IdUser"].ToString()) == 3045 || int.Parse(Session["IdUser"].ToString()) == 3030 || int.Parse(Session["IdUser"].ToString()) == 1 || int.Parse(Session["IdUser"].ToString()) == 14 || int.Parse(Session["IdUser"].ToString()) == 3066)
                        {
                            <button class="btn btn-danger btn-round" onclick='OnReject(@int.Parse(ViewBag.Request.IdTrvReq.ToString()),2)'>
                                <i class="material-icons">close</i> Rechazar
                            </button>
                        }
                        <br />
                        <br />
                        <br />
                    </div>
                </div>
            </div>

            @*<div>
                    <button class="btn btn-primary btn-round" onclick="ReturnToLib()">
                        <i class="material-icons">reply</i> Regresar
                    </button>
                </div>*@

        </div>
    </div>
</div>



