@model Model.Servicios

@{
    ViewBag.Title = "NewServicio";
    List<Model.SEDocumentosServicios> docs = ViewBag.Docs;
    Model.SEDocumentosServicios aux = new Model.SEDocumentosServicios();
    Layout = "~/Views/Shared/_Layout.cshtml";
    string name1 = string.Empty;
}

<div class="nav-align-center">
    <h3>Registro de servicios</h3>
</div>

<div class="col-sm-10 col-md-offset-1">
    <div class="card">
        <div class="card-header card-header-icon" data-background-color="gray" style="background:#159D93;">
            <i class="material-icons">devices_other</i>
        </div>
        <div class="card-content">
            <h4 class="card-title">Información del servicio</h4>

            <a href="@Url.Action("LibServicios", "Capacidades")" class="btn btn-primary btn-round">
                <i class="material-icons">reply</i> Regresar
            </a>

            <br />
            <br />

            @using (Html.BeginForm("AddServicio", "Capacidades", new { idDelFormulario = "frm-newServicio" }))
            {

                @Html.HiddenFor(x => x.IdServicios)

                if (Model.Id_Empresa != -1)
                {
                    @Html.DropDownListFor(x => x.Id_Empresa, new SelectList(ViewBag.Empresas, "Id_Empresa", "Razon_Social", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Empresa, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_Empresa, new SelectList(ViewBag.Empresas, "Id_Empresa", "Razon_Social", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Empresa, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                if (Model.Id_Proveedor != -1)
                {
                    @Html.DropDownListFor(x => x.Id_Proveedor, new SelectList(ViewBag.Proveedores, "Id_Empresa", "Razon_Social", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Proveedor, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_Proveedor, new SelectList(ViewBag.Proveedores, "Id_Empresa", "Razon_Social", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Proveedor, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                if (Model.Id_tipo_servicio != -1)
                {
                    @Html.DropDownListFor(x => x.Id_tipo_servicio, new SelectList(ViewBag.Servicios, "Id_tipo_servicio", "Tipo_Servicio", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_tipo_servicio, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_tipo_servicio, new SelectList(ViewBag.Servicios, "Id_tipo_servicio", "Tipo_Servicio", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_tipo_servicio, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                if (Model.IdDireccion != -1)
                {
                    @Html.DropDownListFor(x => x.IdDireccion, new SelectList(ViewBag.Direcciones, "IdDireccion", "Direccion", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.IdDireccion, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.IdDireccion, new SelectList(ViewBag.Direcciones, "IdDireccion", "Direccion", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.IdDireccion, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                if (Model.IdEstatusServicio != -1)
                {
                    @Html.DropDownListFor(x => x.IdEstatusServicio, new SelectList(ViewBag.Estatus, "IdEstatusServicio", "EstatusServicio", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.IdEstatusServicio, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.IdEstatusServicio, new SelectList(ViewBag.Estatus, "IdEstatusServicio", "EstatusServicio", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.IdEstatusServicio, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                if (Model.Id_Lapso != -1)
                {
                    @Html.DropDownListFor(x => x.Id_Lapso, new SelectList(ViewBag.Lapsos, "Id_Lapso", "Lapso", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Lapso, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_Lapso, new SelectList(ViewBag.Lapsos, "Id_Lapso", "Lapso", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Lapso, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                <br />
                <br />

                <div class="input-group">

                    <span class="input-group-addon">
                        <i class="material-icons">
                            filter_9_plus
                        </i>
                    </span>

                    @Html.TextBoxFor(x => x.NReferencia, new { @class = "form-control", @placeholder = "* Referencia", @required = "true" })
                    @Html.ValidationMessageFor(x => x.NReferencia, null, new { @class = "badge badge-danger" })

                </div>

                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">event</i>
                    </span>
                    <div class="form-group">

                        @if (Model.IdServicios == 0)
                        {
                            <label class="control-label" for=@Model.FCorte>* Fecha de corte:</label>
                            @Html.TextBoxFor(x => x.FCorte, new { @type = "date", @class = "form-control", @required = "true" })
                        }
                        else
                        {
                            <label class="control-label" for=@Model.FCorte>* Fecha de corte:</label>
                            @Html.TextBoxFor(x => x.FCorte, new { @type = "text", @class = "form-control datetimepicker" })
                        }

                    </div>
                </div>

                <div class="input-group">

                    <span class="input-group-addon">
                        <i class="material-icons">local_atm</i>
                    </span>
                    <label class="control-label" for=@Model.Monto> *Monto:</label>

                    @Html.TextBoxFor(x => x.Monto, "{0:0.00}", new { @class = "form-control", @type = "number" })
                    @Html.ValidationMessageFor(x => x.Monto, null, new { @class = "badge badge-danger" })

                </div>

                if (Model.Id_Moneda != -1)
                {
                    @Html.DropDownListFor(x => x.Id_Moneda, new SelectList(ViewBag.Divisas, "Id_Moneda", "Moneda", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Moneda, null, new { @class = "badge badge-danger" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_Moneda, new SelectList(ViewBag.Divisas, "Id_Moneda", "Moneda", -1), new { @class = "selectpicker", data_style = "btn btn-info btn-round", data_size = "10" })
                    @Html.ValidationMessageFor(x => x.Id_Moneda, "* Este campo es obligatorio", new { @class = "badge badge-danger" })
                }

                <br />
                <br />

                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">text_fields</i>
                    </span>

                    @Html.TextAreaFor(x => x.Comentario, new { @class = "form-control", @placeholder = "Comentario" })
                    @Html.ValidationMessageFor(x => x.Comentario, null, new { @class = "badge badge-danger" })

                </div>

                <br />

                <br />

                <p class="text-gray">* El campo es obligatorio</p>

                <button type="submit" class="btn btn-info btn-round">
                    <i class="material-icons">sd_card</i> Guardar
                </button>

            }

        </div>
    </div>
</div>

@if (Model.IdServicios != 0)
{

    <div class="col-sm-10 col-md-offset-1">
        <div class="card">
            <div class="card-header card-header-text" data-background-color="gray" style="background:#159D93;">
                <h4 class="card-title"><i class="material-icons">attach_file</i> Documentos</h4>
            </div>
            <div class="card-content">
                <div class="material-datatables">
                    <table id="ticketDetailTable" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100" style="width:100%">
                        <tr>
                            <td style="width:40%">
                                <b>Tipo de archivo</b>
                            </td>
                            <td class="text-center" style="width:30%">
                                <b>Subir / Cambiar</b>
                            </td>
                            <td class="text-center" style="width:30%">
                                <b>Descargar</b>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <h4>Factura</h4>
                            </td>
                            <td class="text-center">

                                @using (Html.BeginForm("UploadFile", "Capacidades", new { tipoDoc = 2, servicioID = Model.IdServicios }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    foreach (var d in docs)
                                    {
                                        if (d.IdTipoDocumentoServicio == 2)
                                        {
                                            aux = d;
                                        }
                                    }
                                    <div class="fileinput fileinput-new text-center" name="UploadFile" id="UploadFacturaFile" data-provides="fileinput">
                                        <div>
                                            <span class="btn btn-round btn-primary btn-just-icon btn-file">
                                                <span class="fileinput-new"><i class="material-icons">attach_file</i></span>
                                                <span class="fileinput-exists"><i class="material-icons">done</i></span>
                                                <input type="file" name="file" id="UploadFactura" class="fileinput" />
                                            </span>
                                            <button type="submit" class="btn btn-primary btn-round fileinput-exists">
                                                <i class="material-icons">cloud_upload</i> Subir!
                                            </button>
                                        </div>
                                    </div>
                                }

                            </td>

                            <td class="text-center">

                                @*<a href="#" onclick="@string.Format("{0}", (Model.Factura.Value) ? string.Format("downloadFile('{0}'); return false;",aux.Nombre) : "")" target="_blank" class="@string.Format("{0}", (Model.Factura.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.Factura.Value)?"Descargar":"No se ha cargado este archivo")">
                                        <i class="material-icons">
                                            cloud_download
                                        </i>
                                    </a>*@

                                <a href='@string.Format("{0}", (Model.XML.Value) ? Url.Action("Download", "Capacidades", new { name = aux.NombreVirtual, name2 = aux.Nombre }) : "#" )' target='@string.Format("{0}",(Model.Factura.Value) ? "_blank" : "" )' class="@string.Format("{0}", (Model.Factura.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.Factura.Value)?"Descargar":"No se ha cargado este archivo")">
                                    <i class="material-icons">
                                        cloud_download
                                    </i>
                                </a>

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <h4>XML</h4>
                            </td>
                            <td class="text-center">

                                @using (Html.BeginForm("UploadFile", "Capacidades", new { tipoDoc = 3, servicioID = Model.IdServicios }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    foreach (var d in docs)
                                    {
                                        if (d.IdTipoDocumentoServicio == 3)
                                        {
                                            aux = d;
                                        }
                                    }
                                    <div class="fileinput fileinput-new text-center" name="UploadFile" id="UploadFacturaFile" data-provides="fileinput">
                                        <div>
                                            <span class="btn btn-round btn-primary btn-just-icon btn-file">
                                                <span class="fileinput-new"><i class="material-icons">attach_file</i></span>
                                                <span class="fileinput-exists"><i class="material-icons">done</i></span>
                                                <input type="file" name="file" id="UploadXML" class="fileinput" />
                                            </span>
                                            <button type="submit" class="btn btn-primary btn-round fileinput-exists">
                                                <i class="material-icons">cloud_upload</i> Subir!
                                            </button>
                                        </div>
                                    </div>
                                }

                            </td>
                            <td class="text-center">

                                @*<a href="#" onclick="@string.Format("{0}", (Model.XML.Value) ? string.Format("downloadFile('{0}'); return false;",aux.Nombre) : "")" target="_blank" class="@string.Format("{0}", (Model.XML.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.XML.Value)?"Descargar":"No se ha cargado este archivo")">
                                        <i class="material-icons">
                                            cloud_download
                                        </i>
                                    </a>*@

                                <a href='@string.Format("{0}", (Model.XML.Value) ? Url.Action("Download", "Capacidades", new { name = aux.NombreVirtual, name2 = aux.Nombre }) : "#" )' target='@string.Format("{0}",(Model.XML.Value) ? "_blank" : "" )' class="@string.Format("{0}", (Model.XML.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.XML.Value)?"Descargar":"No se ha cargado este archivo")">
                                    <i class="material-icons">
                                        cloud_download
                                    </i>
                                </a>

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <h4>Comprobante de pago</h4>
                            </td>
                            <td class="text-center">

                                @using (Html.BeginForm("UploadFile", "Capacidades", new { tipoDoc = 4, servicioID = Model.IdServicios }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    foreach (var d in docs)
                                    {
                                        if (d.IdTipoDocumentoServicio == 4)
                                        {
                                            aux = d;
                                        }
                                    }
                                    <div class="fileinput fileinput-new text-center" name="UploadFile" id="UploadFacturaFile" data-provides="fileinput">
                                        <div>
                                            <span class="btn btn-round btn-primary btn-just-icon btn-file">
                                                <span class="fileinput-new"><i class="material-icons">attach_file</i></span>
                                                <span class="fileinput-exists"><i class="material-icons">done</i></span>
                                                <input type="file" name="file" id="UploadCPago" class="fileinput" />
                                            </span>
                                            <button type="submit" class="btn btn-primary btn-round fileinput-exists">
                                                <i class="material-icons">cloud_upload</i> Subir!
                                            </button>
                                        </div>
                                    </div>
                                }

                            </td>
                            <td class="text-center">

                                @*<a href="#" onclick="@string.Format("{0}", (Model.CPago.Value) ? string.Format("downloadFile('{0}'); return false;",aux.Nombre) : "")" target="_blank" class="@string.Format("{0}", (Model.CPago.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.CPago.Value)?"Descargar":"No se ha cargado este archivo")">
                                        <i class="material-icons">
                                            cloud_download
                                        </i>
                                    </a>*@

                                <a href='@string.Format("{0}", (Model.CPago.Value) ? Url.Action("Download", "Capacidades", new { name = aux.NombreVirtual, name2 = aux.Nombre }) : "#" )' target='@string.Format("{0}",(Model.CPago.Value) ? "_blank" : "" )' class="@string.Format("{0}", (Model.CPago.Value)?"btn btn-success btn-just-icon btn-round":"btn btn-danger btn-just-icon btn-round")" rel="tooltip" data-placement="top" title="@string.Format("{0}", (Model.CPago.Value)?"Descargar":"No se ha cargado este archivo")">
                                    <i class="material-icons">
                                        cloud_download
                                    </i>
                                </a>

                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

}



