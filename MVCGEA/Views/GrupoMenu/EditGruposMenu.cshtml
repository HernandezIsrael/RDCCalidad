@model Model.Grupos_Menu

@using (Ajax.BeginForm("Save", "GrupoMenu", new AjaxOptions()
{
    HttpMethod = "POST",
    UpdateTargetId = "resultado",
    InsertionMode = InsertionMode.Replace,
    OnBegin = "onBegin",
    OnComplete = "onComplete",
    OnSuccess = "onSuccess",
    OnFailure = "onFailure"


}))
{
    @Html.HiddenFor(x => x.Id_Menu_Grupo)
    <h4 class="card-title">Grupo</h4>
    <div class="input-group">
        <span class="input-group-addon">
            <i class="material-icons">group_work</i>
        </span>
        <div class="form-group">

            @Html.TextBoxFor(x => x.Grupo, new { @class = "form-control", @placeholder = "Grupo" })
            @Html.ValidationMessageFor(x => x.Grupo, null, new { @class = "badge badge-danger" })

        </div>
    </div>
    <div class="input-group">
        <span class="input-group-addon">
            <i class="material-icons">swap_vertical_circle</i>
        </span>
        <div class="form-group">

            @Html.TextBoxFor(x => x.Orden, new { @class = "form-control", @placeholder = "Orden" })
            @Html.ValidationMessageFor(x => x.Orden, null, new { @class = "badge badge-danger" })

        </div>
    </div>
    <div class="input-group">
        <span class="input-group-addon">
            <i class="material-icons">room</i>
        </span>
        <div class="form-group">

            @Html.TextBoxFor(x => x.Icon, new { @class = "form-control", @placeholder = "Icono" })
            @Html.ValidationMessageFor(x => x.Icon, null, new { @class = "badge badge-danger" })

        </div>
    </div>
    <div class="input-group">
        <span class="input-group-addon">
            Activo:
        </span>
        <div class="form-group">

            <div class="togglebutton">
                <label>
                    @Html.CheckBoxFor(x => x.Activo)
                </label>
            </div>

        </div>
    </div>

    <button type="submit" class="btn btn-fill btn-rose">Guardar</button>
}


