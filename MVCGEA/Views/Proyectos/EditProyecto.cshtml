@model Model.Proyectos


            @using (Ajax.BeginForm("Save", "Proyectos", new AjaxOptions()
            {
                HttpMethod = "POST",
                UpdateTargetId = "resultado",
                InsertionMode = InsertionMode.Replace,
                OnBegin = "onBegin",
                OnComplete = "onComplete",
                OnSuccess = "onSuccess",
                OnFailure = "onFailure"


            }))
            {

                <h4 class="card-title">Proyecto</h4>
                @Html.HiddenFor(X=> X.Id_Proyecto)


                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">business</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Id_Empresa>Empresas:</label>

                        @Html.DropDownListFor(x => x.Id_Empresa, new SelectList(ViewBag.ListEmpresas, "Id", "NombreCompleto", -1), new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.Id_Empresa, null, new { @class = "badge badge-danger" })
                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">folder_special</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Proyecto>Proyecto:</label>
                        @Html.TextBoxFor(x => x.Proyecto, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Proyecto, null, new { @class = "badge badge-danger" })

                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">code</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Codigo>Codigo:</label>
                        @Html.TextBoxFor(x => x.Codigo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Codigo, null, new { @class = "badge badge-danger" })

                    </div>
                </div>
                <dviv class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">account_balance</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Id_Institucion>Programa:</label>

                        @Html.DropDownListFor(x => x.Id_Institucion, new SelectList(ViewBag.ListProyectos, "Id", "Programa",Model.Id_Institucion), new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.Id_Institucion, null, new { @class = "badge badge-danger" })

                    </div>
                </dviv>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">date_range</i>
                    </span>
                    <div class="form-group">
                        <label class="control-label" for=@Model.Fecha_Inicio>Fecha de inicio:</label>
                        @Html.TextBoxFor(x => x.Fecha_Inicio, new { @class = "form-control datetimepicker" })


                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">date_range</i>
                    </span>
                    <div class="form-group">
                        <label class="control-label" for=@Model.Fecha_Fin>Fecha de termino:</label>
                        @Html.TextBoxFor(x => x.Fecha_Fin, new { @class = "form-control datetimepicker" })


                    </div>
                </div>

                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">attach_money</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Financiamiento>Financiamiento:</label>
                        @Html.TextBoxFor(x => x.Financiamiento, "{0:0.00}", new { @class = "form-control", @type = "number" ,@step=0.01 })

                        @Html.ValidationMessageFor(x => x.Financiamiento, null, new { @class = "badge badge-danger" })

                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">monetization_on</i>
                    </span>
                    <div class="form-group label-floating">
                        <label class="control-label" for=@Model.Id_Moneda>Moneda:</label>

                        @Html.DropDownListFor(x => x.Id_Moneda, new SelectList(ViewBag.ListMoneda, "Id", "Money", Model.Id_Moneda), new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.Id_Moneda, null, new { @class = "badge badge-danger" })
                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">local_atm</i>
                    </span>
                    <div class="form-group">
                        <label class="control-label" for=@Model.Id_Banco>Banco:</label>

                        @Html.DropDownListFor(x => x.Id_Banco, new SelectList(string.Empty, "Id", "Banco",Model.Id_Banco), new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.Id_Banco, null, new { @class = "badge badge-danger" })
                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">credit_card</i>
                    </span>
                    <div class="form-groupg">
                        <label class="control-label" for=@Model.Id_N_Cuenta>No Cuenta:</label>

                        @Html.DropDownListFor(x => x.Id_N_Cuenta, new SelectList(string.Empty, "Id", "Cuenta",Model.Id_N_Cuenta), new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.Id_N_Cuenta, null, new { @class = "badge badge-danger" })
                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        Activo:
                    </span>
                    <div class="form-group">

                        <div class="togglebutton">
                            <label>
                                @Html.CheckBoxFor(x => x.Activo)
                            </label>
                        </div>

                    </div>
                </div>

                <button type="submit" class="btn btn-info btn-round" style="background:#159D93">
                    <i class="material-icons">save</i> Guardar
                </button>
            }


<script type="text/javascript">
    $(document).ready(function () {
        if('@Model.Id_Proyecto'>0)
        OnComplete();
    });

    $('.datetimepicker').datetimepicker({
        defaultDate: Date.now(),

        format: 'DD-MM-YYYY',
        icons: {


            time: "fa fa-clock-o",
            date: "fa fa-calendar",
            up: "fa fa-chevron-up",
            down: "fa fa-chevron-down",
            previous: 'fa fa-chevron-left',
            next: 'fa fa-chevron-right',
            today: 'fa fa-screenshot',
            clear: 'fa fa-trash',
            close: 'fa fa-remove'

        }
    });

    $("#Id_Empresa").change(function () {

        $("#Id_Banco").empty();
        $("#Id_N_Cuenta").empty();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetBancos")',

            dataType: 'json',

            data: { id: $("#Id_Moneda").val(), idemp: $("#Id_Empresa").val() },
            success: function (states) {

                $.each(states, function (i, state) {


                    if (state.Value==-1) {
                        $("#Id_Banco").append('<option selected = "selected" value="' + state.Value + '">' +
                         state.Text + '</option>');


                    } else {
                        $("#Id_Banco").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    }


                });
            },
            error: function (ex) {
                alert('Failed to retrieve .' + ex);
            }
        });

        return false;
    });
    $("#Id_Moneda").change(function () {

        $("#Id_Banco").empty();
        $("#Id_N_Cuenta").empty();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetBancos")',

            dataType: 'json',

            data: { id: $("#Id_Moneda").val(), idemp: $("#Id_Empresa").val() },
            success: function (states) {

                $.each(states, function (i, state) {


                    if (state.Value == -1) {
                        $("#Id_Banco").append('<option selected = "selected" value="' + state.Value + '">' +
                         state.Text + '</option>');


                    } else {
                        $("#Id_Banco").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    }


                });
            },
            error: function (ex) {
                alert('Failed to retrieve .' + ex);
            }
        });

        return false;
    });
    $("#Id_Banco").change(function () {


        $("#Id_N_Cuenta").empty();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCuentas")',

            dataType: 'json',

            data: { idmon: $("#Id_Moneda").val(), idemp: $("#Id_Empresa").val(), idBan: $("#Id_Banco").val() },
            success: function (states) {

                $.each(states, function (i, state) {


                     if (state.Value==-1) {
                        $("#Id_N_Cuenta").append('<option selected = "selected" value="' + state.Value + '">' +
                         state.Text + '</option>');


                    } else {
                        $("#Id_N_Cuenta").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    }


                });
            },
            error: function (ex) {
                alert('Failed to retrieve .' + ex);
            }
        });

        return false;
    });



    function OnComplete() {
        $("#Id_Banco").empty();
        $("#Id_N_Cuenta").empty();
        if ($("#Id_Empresa").val() != -1) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetBancos")',

                dataType: 'json',

                data: { id: $("#Id_Moneda").val(), idemp: $("#Id_Empresa").val() },
                success: function (states) {

                    $.each(states, function (i, state) {


                        if ('@Model.Id_Banco' == state.Value) {
                            $("#Id_Banco").append('<option selected = "selected" value="' + state.Value + '">' +
                             state.Text + '</option>');


                        } else {
                            $("#Id_Banco").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                        }


                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve .' + ex);
                }
            });



        }
       

        if ('@Model.Id_Banco' != 0 || '@Model.Id_Banco' != null) {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCuentas")',

                dataType: 'json',

                data: { idmon: $("#Id_Moneda").val(), idemp: $("#Id_Empresa").val(), idBan: '@Model.Id_Banco' },
                success: function (states) {

                    $.each(states, function (i, state) {

                        if ('@Model.Id_N_Cuenta' == state.Value) {
                            $("#Id_N_Cuenta").append('<option selected = "selected" value="' + state.Value + '">' +
                             state.Text + '</option>');


                        } else {
                            $("#Id_N_Cuenta").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                        }


                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve .' + ex);
                }
            });
        }

        return false;

    }

</script>